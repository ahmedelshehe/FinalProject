// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231002123150_2-11")]
    partial class _211
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -28
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -29
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -30
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -31
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -32
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -34
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -35
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -36
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "c66f3e7d-d526-42cd-9d05-e8b8ffddaab5",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Department 1"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Department 2"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Department 3"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Department 4"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Greta",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Libyan Arab Jamahiriya",
                            DeptID = -1,
                            Email = "employee-1@example.com",
                            FirstName = "Bobby",
                            Gender = 1,
                            LastName = "Christophe",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 230320.0,
                            Street = "Kilback Viaduct"
                        },
                        new
                        {
                            Id = -2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Bereniceville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Congo",
                            DeptID = -4,
                            Email = "employee-2@example.com",
                            FirstName = "Anabelle",
                            Gender = 1,
                            LastName = "Reyna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 123638.0,
                            Street = "Reymundo Crest"
                        },
                        new
                        {
                            Id = -3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Priscillabury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Luxembourg",
                            DeptID = -4,
                            Email = "employee-3@example.com",
                            FirstName = "Jerald",
                            Gender = 0,
                            LastName = "Marlon",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 208981.0,
                            Street = "Bryana Crest"
                        },
                        new
                        {
                            Id = -4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Clemmieside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ghana",
                            DeptID = -1,
                            Email = "employee-4@example.com",
                            FirstName = "Claudie",
                            Gender = 1,
                            LastName = "Filomena",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 166417.0,
                            Street = "Renner Trail"
                        },
                        new
                        {
                            Id = -5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Boehmburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Svalbard & Jan Mayen Islands",
                            DeptID = -2,
                            Email = "employee-5@example.com",
                            FirstName = "Alessandro",
                            Gender = 0,
                            LastName = "Carlee",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 73860.0,
                            Street = "Dayna Trace"
                        },
                        new
                        {
                            Id = -6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "O'Konfort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malawi",
                            DeptID = -3,
                            Email = "employee-6@example.com",
                            FirstName = "Carolina",
                            Gender = 1,
                            LastName = "Cristian",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 231517.0,
                            Street = "Santino Spurs"
                        },
                        new
                        {
                            Id = -7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Delfinaside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kyrgyz Republic",
                            DeptID = -1,
                            Email = "employee-7@example.com",
                            FirstName = "Delfina",
                            Gender = 0,
                            LastName = "Betsy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 291836.0,
                            Street = "Hessel Light"
                        },
                        new
                        {
                            Id = -8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Caratown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brunei Darussalam",
                            DeptID = -4,
                            Email = "employee-8@example.com",
                            FirstName = "Mayra",
                            Gender = 0,
                            LastName = "Meggie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 107705.0,
                            Street = "Conroy Viaduct"
                        },
                        new
                        {
                            Id = -9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Alfredafort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Faroe Islands",
                            DeptID = -4,
                            Email = "employee-9@example.com",
                            FirstName = "Jordyn",
                            Gender = 0,
                            LastName = "Jaida",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 71204.0,
                            Street = "Hessel Radial"
                        },
                        new
                        {
                            Id = -10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Eulahchester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Dominica",
                            DeptID = -3,
                            Email = "employee-10@example.com",
                            FirstName = "Syble",
                            Gender = 1,
                            LastName = "Michale",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 120805.0,
                            Street = "Ralph Springs"
                        },
                        new
                        {
                            Id = -11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Crooksport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Czech Republic",
                            DeptID = -2,
                            Email = "employee-11@example.com",
                            FirstName = "Schuyler",
                            Gender = 0,
                            LastName = "Frankie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 163749.0,
                            Street = "Conner Estates"
                        },
                        new
                        {
                            Id = -12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Schadenville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Grenada",
                            DeptID = -1,
                            Email = "employee-12@example.com",
                            FirstName = "Newton",
                            Gender = 0,
                            LastName = "Victoria",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 465423.0,
                            Street = "Dietrich Burg"
                        },
                        new
                        {
                            Id = -13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Evelineton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Trinidad and Tobago",
                            DeptID = -1,
                            Email = "employee-13@example.com",
                            FirstName = "Aida",
                            Gender = 1,
                            LastName = "Lennie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 58640.0,
                            Street = "Jerde Valley"
                        },
                        new
                        {
                            Id = -14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Valentineshire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Zimbabwe",
                            DeptID = -4,
                            Email = "employee-14@example.com",
                            FirstName = "Cedrick",
                            Gender = 1,
                            LastName = "Kenya",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 406629.0,
                            Street = "Hilma Walks"
                        },
                        new
                        {
                            Id = -15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Susieton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ireland",
                            DeptID = -2,
                            Email = "employee-15@example.com",
                            FirstName = "Andreanne",
                            Gender = 0,
                            LastName = "Sadie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 371337.0,
                            Street = "Hoeger Neck"
                        },
                        new
                        {
                            Id = -16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Framiton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Djibouti",
                            DeptID = -1,
                            Email = "employee-16@example.com",
                            FirstName = "Emmanuel",
                            Gender = 1,
                            LastName = "Conrad",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 113907.0,
                            Street = "Weimann River"
                        },
                        new
                        {
                            Id = -17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Mosciskistad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "French Guiana",
                            DeptID = -1,
                            Email = "employee-17@example.com",
                            FirstName = "Lisandro",
                            Gender = 0,
                            LastName = "Kiel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 118040.0,
                            Street = "Leannon Forge"
                        },
                        new
                        {
                            Id = -18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Shaneview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Guadeloupe",
                            DeptID = -1,
                            Email = "employee-18@example.com",
                            FirstName = "Princess",
                            Gender = 1,
                            LastName = "Evert",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 429769.0,
                            Street = "Selina Pike"
                        },
                        new
                        {
                            Id = -19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Nedrafort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Seychelles",
                            DeptID = -1,
                            Email = "employee-19@example.com",
                            FirstName = "Bill",
                            Gender = 0,
                            LastName = "Daisy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 189968.0,
                            Street = "Padberg Oval"
                        },
                        new
                        {
                            Id = -20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Jazmynbury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Guernsey",
                            DeptID = -4,
                            Email = "employee-20@example.com",
                            FirstName = "Shanel",
                            Gender = 1,
                            LastName = "Beverly",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 221497.0,
                            Street = "Murazik Hollow"
                        },
                        new
                        {
                            Id = -21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Carmellatown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Zimbabwe",
                            DeptID = -3,
                            Email = "employee-21@example.com",
                            FirstName = "Aditya",
                            Gender = 0,
                            LastName = "Kailey",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 127611.0,
                            Street = "Schmeler Avenue"
                        },
                        new
                        {
                            Id = -22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Mertztown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kuwait",
                            DeptID = -2,
                            Email = "employee-22@example.com",
                            FirstName = "Julie",
                            Gender = 0,
                            LastName = "Donna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 122981.0,
                            Street = "Murazik Centers"
                        },
                        new
                        {
                            Id = -23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Wunschfort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States of America",
                            DeptID = -1,
                            Email = "employee-23@example.com",
                            FirstName = "Reggie",
                            Gender = 1,
                            LastName = "Catharine",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 315927.0,
                            Street = "Francis Fall"
                        },
                        new
                        {
                            Id = -24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Dorthy",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Heard Island and McDonald Islands",
                            DeptID = -3,
                            Email = "employee-24@example.com",
                            FirstName = "Lindsay",
                            Gender = 0,
                            LastName = "Elisa",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 32880.0,
                            Street = "Francisca River"
                        },
                        new
                        {
                            Id = -25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Stephenside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States Minor Outlying Islands",
                            DeptID = -1,
                            Email = "employee-25@example.com",
                            FirstName = "Gudrun",
                            Gender = 1,
                            LastName = "Casimer",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 282706.0,
                            Street = "Runte Fields"
                        },
                        new
                        {
                            Id = -26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Geraldhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Heard Island and McDonald Islands",
                            DeptID = -1,
                            Email = "employee-26@example.com",
                            FirstName = "Hilma",
                            Gender = 1,
                            LastName = "Karolann",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 465059.0,
                            Street = "Greg Trail"
                        },
                        new
                        {
                            Id = -27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Schusterberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Svalbard & Jan Mayen Islands",
                            DeptID = -1,
                            Email = "employee-27@example.com",
                            FirstName = "Sigmund",
                            Gender = 0,
                            LastName = "Burnice",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 156123.0,
                            Street = "Alejandra Forks"
                        },
                        new
                        {
                            Id = -28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Colemouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Heard Island and McDonald Islands",
                            DeptID = -4,
                            Email = "employee-28@example.com",
                            FirstName = "Angelita",
                            Gender = 0,
                            LastName = "Hadley",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 132192.0,
                            Street = "Bailey Pines"
                        },
                        new
                        {
                            Id = -29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Gibsonburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brunei Darussalam",
                            DeptID = -2,
                            Email = "employee-29@example.com",
                            FirstName = "Ada",
                            Gender = 0,
                            LastName = "Schuyler",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 41817.0,
                            Street = "Mueller Trace"
                        },
                        new
                        {
                            Id = -30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Nathanaelshire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ethiopia",
                            DeptID = -3,
                            Email = "employee-30@example.com",
                            FirstName = "Giuseppe",
                            Gender = 1,
                            LastName = "Domenica",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 76145.0,
                            Street = "Jaquelin Causeway"
                        },
                        new
                        {
                            Id = -31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Demetrius",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Burkina Faso",
                            DeptID = -2,
                            Email = "employee-31@example.com",
                            FirstName = "Jailyn",
                            Gender = 0,
                            LastName = "Eliseo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 273595.0,
                            Street = "Krajcik Gardens"
                        },
                        new
                        {
                            Id = -32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Corwinmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Norway",
                            DeptID = -1,
                            Email = "employee-32@example.com",
                            FirstName = "Martine",
                            Gender = 1,
                            LastName = "Antonette",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 339535.0,
                            Street = "Russel Falls"
                        },
                        new
                        {
                            Id = -33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Bernierview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Pakistan",
                            DeptID = -2,
                            Email = "employee-33@example.com",
                            FirstName = "Zakary",
                            Gender = 1,
                            LastName = "Catherine",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 291971.0,
                            Street = "Larson Walk"
                        },
                        new
                        {
                            Id = -34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Ashlee",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Algeria",
                            DeptID = -4,
                            Email = "employee-34@example.com",
                            FirstName = "Rebekah",
                            Gender = 0,
                            LastName = "Thelma",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 408166.0,
                            Street = "Aglae Viaduct"
                        },
                        new
                        {
                            Id = -35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Weimannmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Norway",
                            DeptID = -3,
                            Email = "employee-35@example.com",
                            FirstName = "Audra",
                            Gender = 1,
                            LastName = "Beth",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 474403.0,
                            Street = "Sidney Shoals"
                        },
                        new
                        {
                            Id = -36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Jacyntheview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Martinique",
                            DeptID = -1,
                            Email = "employee-36@example.com",
                            FirstName = "Estella",
                            Gender = 0,
                            LastName = "Omari",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 219596.0,
                            Street = "Collins Meadow"
                        },
                        new
                        {
                            Id = -37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Mertieton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Antigua and Barbuda",
                            DeptID = -1,
                            Email = "employee-37@example.com",
                            FirstName = "Lon",
                            Gender = 0,
                            LastName = "Wanda",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 330083.0,
                            Street = "Kiehn Fort"
                        },
                        new
                        {
                            Id = -38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Brandt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Uganda",
                            DeptID = -1,
                            Email = "employee-38@example.com",
                            FirstName = "Lucile",
                            Gender = 0,
                            LastName = "Chelsie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 221178.0,
                            Street = "Kessler Parkway"
                        },
                        new
                        {
                            Id = -39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Justenberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "New Caledonia",
                            DeptID = -2,
                            Email = "employee-39@example.com",
                            FirstName = "Zella",
                            Gender = 1,
                            LastName = "Florence",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 85220.0,
                            Street = "Kshlerin Views"
                        },
                        new
                        {
                            Id = -40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Reillyfurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Togo",
                            DeptID = -2,
                            Email = "employee-40@example.com",
                            FirstName = "Daphnee",
                            Gender = 0,
                            LastName = "Kevon",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 468755.0,
                            Street = "Kozey Ridges"
                        },
                        new
                        {
                            Id = -41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Bonnieton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Belgium",
                            DeptID = -4,
                            Email = "employee-41@example.com",
                            FirstName = "Zander",
                            Gender = 0,
                            LastName = "Meredith",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 328238.0,
                            Street = "Guadalupe Shores"
                        },
                        new
                        {
                            Id = -42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Julianaton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Georgia",
                            DeptID = -1,
                            Email = "employee-42@example.com",
                            FirstName = "Grant",
                            Gender = 0,
                            LastName = "Nettie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 390942.0,
                            Street = "Brielle Lock"
                        },
                        new
                        {
                            Id = -43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Buckridgeside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Vincent and the Grenadines",
                            DeptID = -3,
                            Email = "employee-43@example.com",
                            FirstName = "Kyle",
                            Gender = 1,
                            LastName = "Rita",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 315398.0,
                            Street = "Cruz Forge"
                        },
                        new
                        {
                            Id = -44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Reece",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Helena",
                            DeptID = -4,
                            Email = "employee-44@example.com",
                            FirstName = "Otha",
                            Gender = 0,
                            LastName = "Alanis",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 412832.0,
                            Street = "Moshe Burgs"
                        },
                        new
                        {
                            Id = -45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Littelside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Guyana",
                            DeptID = -2,
                            Email = "employee-45@example.com",
                            FirstName = "Caroline",
                            Gender = 0,
                            LastName = "Kaia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 374171.0,
                            Street = "Tyshawn Hills"
                        },
                        new
                        {
                            Id = -46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Claudine",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Congo",
                            DeptID = -4,
                            Email = "employee-46@example.com",
                            FirstName = "Kassandra",
                            Gender = 0,
                            LastName = "Enid",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 458720.0,
                            Street = "Watsica Rest"
                        },
                        new
                        {
                            Id = -47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Desmondborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States of America",
                            DeptID = -3,
                            Email = "employee-47@example.com",
                            FirstName = "Manuel",
                            Gender = 0,
                            LastName = "Nora",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 172204.0,
                            Street = "Jacinthe Track"
                        },
                        new
                        {
                            Id = -48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Murphymouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Jamaica",
                            DeptID = -1,
                            Email = "employee-48@example.com",
                            FirstName = "Ramon",
                            Gender = 1,
                            LastName = "Leanna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 128282.0,
                            Street = "Gleichner Junction"
                        },
                        new
                        {
                            Id = -49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Ellabury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Indonesia",
                            DeptID = -1,
                            Email = "employee-49@example.com",
                            FirstName = "Jared",
                            Gender = 1,
                            LastName = "Ebba",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 165565.0,
                            Street = "Anya Square"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayOvernumberofvacationInyear")
                        .HasColumnType("int");

                    b.Property<int>("numberofvacationInyear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSetting", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountHourPrice = 150,
                            ExtraHourPrice = 75,
                            PriceForDayOvernumberofvacationInyear = 300,
                            numberofvacationInyear = 21
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = -3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = -4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = -5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = -6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = -7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = -8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = -9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = -10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = -11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = -12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = -13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = -14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = -15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = -16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = -17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = -18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = -19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = -20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = -21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = -22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = -23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = -24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = -25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -28,
                            Name = "OfficialVacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = -29,
                            Name = "Vacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -30,
                            Name = "Vacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -31,
                            Name = "Vacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -32,
                            Name = "Vacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = -34,
                            Name = "GeneralSetting",
                            Operation = 1
                        },
                        new
                        {
                            Id = -35,
                            Name = "GeneralSetting",
                            Operation = 2
                        },
                        new
                        {
                            Id = -36,
                            Name = "Salary",
                            Operation = 1
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Extra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SettingViewModel", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}

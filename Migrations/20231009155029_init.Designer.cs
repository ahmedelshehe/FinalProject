// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231009155029_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 28
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 29
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 30
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 31
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 32
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 34
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 35
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 36
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "c356629c-101d-4231-8857-77f7b9e1bd9a",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "R & D"
                        },
                        new
                        {
                            Id = 3,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Lamarburgh",
                            ContractDate = new DateTime(2022, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "British Indian Ocean Territory (Chagos Archipelago)",
                            DeptID = 3,
                            Email = "employee1@hrsm.com",
                            FirstName = "Selmer",
                            Gender = 1,
                            LastName = "Paula",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 474907.0,
                            Street = "Dibbert Station"
                        },
                        new
                        {
                            Id = 2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Cliftonfurt",
                            ContractDate = new DateTime(2021, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Fiji",
                            DeptID = 1,
                            Email = "employee2@hrsm.com",
                            FirstName = "Deron",
                            Gender = 1,
                            LastName = "Archibald",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 40006.0,
                            Street = "Shakira Haven"
                        },
                        new
                        {
                            Id = 3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2000, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Mariana",
                            ContractDate = new DateTime(2021, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cameroon",
                            DeptID = 2,
                            Email = "employee3@hrsm.com",
                            FirstName = "Hans",
                            Gender = 1,
                            LastName = "Litzy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 430712.0,
                            Street = "Yessenia Stravenue"
                        },
                        new
                        {
                            Id = 4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Yostland",
                            ContractDate = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "South Africa",
                            DeptID = 1,
                            Email = "employee4@hrsm.com",
                            FirstName = "Mathilde",
                            Gender = 1,
                            LastName = "Malika",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 15795.0,
                            Street = "Robel Hollow"
                        },
                        new
                        {
                            Id = 5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Strosinborough",
                            ContractDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ethiopia",
                            DeptID = 1,
                            Email = "employee5@hrsm.com",
                            FirstName = "Glen",
                            Gender = 1,
                            LastName = "Melyssa",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 198120.0,
                            Street = "Torphy Ports"
                        },
                        new
                        {
                            Id = 6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Thompsonchester",
                            ContractDate = new DateTime(2022, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Macao",
                            DeptID = 1,
                            Email = "employee6@hrsm.com",
                            FirstName = "Katrine",
                            Gender = 0,
                            LastName = "Lauriane",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 123890.0,
                            Street = "Buckridge Plaza"
                        },
                        new
                        {
                            Id = 7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Nolanbury",
                            ContractDate = new DateTime(2022, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Solomon Islands",
                            DeptID = 1,
                            Email = "employee7@hrsm.com",
                            FirstName = "Modesta",
                            Gender = 1,
                            LastName = "Jaida",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 286782.0,
                            Street = "Koch Roads"
                        },
                        new
                        {
                            Id = 8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Frances",
                            ContractDate = new DateTime(2022, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Chad",
                            DeptID = 1,
                            Email = "employee8@hrsm.com",
                            FirstName = "Hailie",
                            Gender = 0,
                            LastName = "Icie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 271066.0,
                            Street = "Tyshawn Place"
                        },
                        new
                        {
                            Id = 9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Royal",
                            ContractDate = new DateTime(2022, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bermuda",
                            DeptID = 3,
                            Email = "employee9@hrsm.com",
                            FirstName = "Clemens",
                            Gender = 1,
                            LastName = "Nash",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 358882.0,
                            Street = "O'Kon Harbor"
                        },
                        new
                        {
                            Id = 10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Brisachester",
                            ContractDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mauritius",
                            DeptID = 3,
                            Email = "employee10@hrsm.com",
                            FirstName = "Zaria",
                            Gender = 1,
                            LastName = "Meredith",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 150608.0,
                            Street = "Schmeler Trail"
                        },
                        new
                        {
                            Id = 11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Erickton",
                            ContractDate = new DateTime(2021, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nigeria",
                            DeptID = 1,
                            Email = "employee11@hrsm.com",
                            FirstName = "Rogelio",
                            Gender = 1,
                            LastName = "Jedediah",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 489533.0,
                            Street = "Feest Light"
                        },
                        new
                        {
                            Id = 12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Amieport",
                            ContractDate = new DateTime(2022, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Lao People's Democratic Republic",
                            DeptID = 3,
                            Email = "employee12@hrsm.com",
                            FirstName = "Elody",
                            Gender = 0,
                            LastName = "Lennie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 485044.0,
                            Street = "Jayce Fields"
                        },
                        new
                        {
                            Id = 13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Judgechester",
                            ContractDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Albania",
                            DeptID = 3,
                            Email = "employee13@hrsm.com",
                            FirstName = "Armando",
                            Gender = 0,
                            LastName = "Kaleigh",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 158034.0,
                            Street = "Kuvalis Center"
                        },
                        new
                        {
                            Id = 14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Eldon",
                            ContractDate = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bermuda",
                            DeptID = 2,
                            Email = "employee14@hrsm.com",
                            FirstName = "Raleigh",
                            Gender = 1,
                            LastName = "Suzanne",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 274075.0,
                            Street = "Altenwerth Fork"
                        },
                        new
                        {
                            Id = 15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Blandastad",
                            ContractDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Tunisia",
                            DeptID = 1,
                            Email = "employee15@hrsm.com",
                            FirstName = "Ceasar",
                            Gender = 1,
                            LastName = "Santina",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 427664.0,
                            Street = "Shane Mission"
                        },
                        new
                        {
                            Id = 16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Margaretefort",
                            ContractDate = new DateTime(2022, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bolivia",
                            DeptID = 2,
                            Email = "employee16@hrsm.com",
                            FirstName = "Charlie",
                            Gender = 0,
                            LastName = "Hosea",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 281389.0,
                            Street = "Orn Drive"
                        },
                        new
                        {
                            Id = 17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Darron",
                            ContractDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Turkmenistan",
                            DeptID = 1,
                            Email = "employee17@hrsm.com",
                            FirstName = "Flavio",
                            Gender = 1,
                            LastName = "Stephen",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 298697.0,
                            Street = "Upton Dale"
                        },
                        new
                        {
                            Id = 18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lemkeborough",
                            ContractDate = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malawi",
                            DeptID = 1,
                            Email = "employee18@hrsm.com",
                            FirstName = "Augustine",
                            Gender = 0,
                            LastName = "Brandy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 481499.0,
                            Street = "Asia Brooks"
                        },
                        new
                        {
                            Id = 19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Gaylordton",
                            ContractDate = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Uzbekistan",
                            DeptID = 1,
                            Email = "employee19@hrsm.com",
                            FirstName = "Catalina",
                            Gender = 1,
                            LastName = "Allene",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 470201.0,
                            Street = "Ellis Plains"
                        },
                        new
                        {
                            Id = 20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Maxine",
                            ContractDate = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Russian Federation",
                            DeptID = 3,
                            Email = "employee20@hrsm.com",
                            FirstName = "Constance",
                            Gender = 0,
                            LastName = "Jackie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 8017.0,
                            Street = "Eliza Burgs"
                        },
                        new
                        {
                            Id = 21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Lura",
                            ContractDate = new DateTime(2023, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Trinidad and Tobago",
                            DeptID = 3,
                            Email = "employee21@hrsm.com",
                            FirstName = "Mortimer",
                            Gender = 1,
                            LastName = "Lionel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 132602.0,
                            Street = "Michele Park"
                        },
                        new
                        {
                            Id = 22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Zane",
                            ContractDate = new DateTime(2021, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Iran",
                            DeptID = 3,
                            Email = "employee22@hrsm.com",
                            FirstName = "Toni",
                            Gender = 1,
                            LastName = "Davonte",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 403661.0,
                            Street = "Wilber Plains"
                        },
                        new
                        {
                            Id = 23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kittyton",
                            ContractDate = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Greenland",
                            DeptID = 1,
                            Email = "employee23@hrsm.com",
                            FirstName = "Pearline",
                            Gender = 1,
                            LastName = "Ford",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 146501.0,
                            Street = "Jacklyn Locks"
                        },
                        new
                        {
                            Id = 24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Jakayla",
                            ContractDate = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Netherlands Antilles",
                            DeptID = 3,
                            Email = "employee24@hrsm.com",
                            FirstName = "Loyce",
                            Gender = 0,
                            LastName = "Neal",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 476114.0,
                            Street = "Sincere Lakes"
                        },
                        new
                        {
                            Id = 25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Jerad",
                            ContractDate = new DateTime(2022, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "British Virgin Islands",
                            DeptID = 2,
                            Email = "employee25@hrsm.com",
                            FirstName = "Edgar",
                            Gender = 0,
                            LastName = "Althea",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 343620.0,
                            Street = "Hillary Stream"
                        },
                        new
                        {
                            Id = 26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Jaidenmouth",
                            ContractDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nauru",
                            DeptID = 2,
                            Email = "employee26@hrsm.com",
                            FirstName = "Vida",
                            Gender = 0,
                            LastName = "Lempi",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 87038.0,
                            Street = "Steuber Stravenue"
                        },
                        new
                        {
                            Id = 27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1999, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Marleemouth",
                            ContractDate = new DateTime(2021, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Spain",
                            DeptID = 3,
                            Email = "employee27@hrsm.com",
                            FirstName = "Twila",
                            Gender = 1,
                            LastName = "Ryley",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 463567.0,
                            Street = "Donnell Estate"
                        },
                        new
                        {
                            Id = 28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1999, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Blake",
                            ContractDate = new DateTime(2022, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Afghanistan",
                            DeptID = 2,
                            Email = "employee28@hrsm.com",
                            FirstName = "Derek",
                            Gender = 1,
                            LastName = "Wilber",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 244754.0,
                            Street = "Langosh Ports"
                        },
                        new
                        {
                            Id = 29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Elmo",
                            ContractDate = new DateTime(2021, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mauritius",
                            DeptID = 3,
                            Email = "employee29@hrsm.com",
                            FirstName = "Harvey",
                            Gender = 0,
                            LastName = "Clyde",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 451443.0,
                            Street = "Lesch Stream"
                        },
                        new
                        {
                            Id = 30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Kali",
                            ContractDate = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Argentina",
                            DeptID = 1,
                            Email = "employee30@hrsm.com",
                            FirstName = "Westley",
                            Gender = 0,
                            LastName = "Genevieve",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 271194.0,
                            Street = "Shanie Junction"
                        },
                        new
                        {
                            Id = 31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Peytonview",
                            ContractDate = new DateTime(2022, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Liechtenstein",
                            DeptID = 1,
                            Email = "employee31@hrsm.com",
                            FirstName = "Murray",
                            Gender = 1,
                            LastName = "Yasmine",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 77609.0,
                            Street = "Paul Street"
                        },
                        new
                        {
                            Id = 32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1999, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Diamond",
                            ContractDate = new DateTime(2022, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nepal",
                            DeptID = 3,
                            Email = "employee32@hrsm.com",
                            FirstName = "Dallas",
                            Gender = 0,
                            LastName = "Dashawn",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 129567.0,
                            Street = "Jeremie Ports"
                        },
                        new
                        {
                            Id = 33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Rosemariehaven",
                            ContractDate = new DateTime(2021, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Iran",
                            DeptID = 2,
                            Email = "employee33@hrsm.com",
                            FirstName = "Macey",
                            Gender = 0,
                            LastName = "Earlene",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 219389.0,
                            Street = "Lance Ridge"
                        },
                        new
                        {
                            Id = 34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Batzburgh",
                            ContractDate = new DateTime(2022, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Barthelemy",
                            DeptID = 2,
                            Email = "employee34@hrsm.com",
                            FirstName = "Dessie",
                            Gender = 0,
                            LastName = "Jane",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 233009.0,
                            Street = "Brady Club"
                        },
                        new
                        {
                            Id = 35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1999, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Emanuel",
                            ContractDate = new DateTime(2021, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Reunion",
                            DeptID = 1,
                            Email = "employee35@hrsm.com",
                            FirstName = "Abe",
                            Gender = 1,
                            LastName = "Alena",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 11490.0,
                            Street = "Destinee Loop"
                        },
                        new
                        {
                            Id = 36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Zulaufchester",
                            ContractDate = new DateTime(2022, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Afghanistan",
                            DeptID = 3,
                            Email = "employee36@hrsm.com",
                            FirstName = "Heloise",
                            Gender = 1,
                            LastName = "Mina",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 28581.0,
                            Street = "Wyman Turnpike"
                        },
                        new
                        {
                            Id = 37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1996, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Chad",
                            ContractDate = new DateTime(2022, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Anguilla",
                            DeptID = 1,
                            Email = "employee37@hrsm.com",
                            FirstName = "Ryley",
                            Gender = 0,
                            LastName = "Carey",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 345167.0,
                            Street = "Von Dam"
                        },
                        new
                        {
                            Id = 38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1998, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Maggiebury",
                            ContractDate = new DateTime(2022, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Isle of Man",
                            DeptID = 2,
                            Email = "employee38@hrsm.com",
                            FirstName = "Theodore",
                            Gender = 0,
                            LastName = "Christy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 213621.0,
                            Street = "Nathaniel Inlet"
                        },
                        new
                        {
                            Id = 39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Dorthashire",
                            ContractDate = new DateTime(2020, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Pierre and Miquelon",
                            DeptID = 1,
                            Email = "employee39@hrsm.com",
                            FirstName = "Fabian",
                            Gender = 1,
                            LastName = "Naomi",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 80575.0,
                            Street = "Rodrigo Inlet"
                        },
                        new
                        {
                            Id = 40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1999, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Dayne",
                            ContractDate = new DateTime(2020, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bahamas",
                            DeptID = 1,
                            Email = "employee40@hrsm.com",
                            FirstName = "Zita",
                            Gender = 1,
                            LastName = "Zachery",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 61513.0,
                            Street = "Kihn Prairie"
                        },
                        new
                        {
                            Id = 41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lincolnchester",
                            ContractDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gibraltar",
                            DeptID = 1,
                            Email = "employee41@hrsm.com",
                            FirstName = "Rylan",
                            Gender = 0,
                            LastName = "Allen",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 498801.0,
                            Street = "Heidi Pass"
                        },
                        new
                        {
                            Id = 42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Reingermouth",
                            ContractDate = new DateTime(2022, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Moldova",
                            DeptID = 3,
                            Email = "employee42@hrsm.com",
                            FirstName = "Tod",
                            Gender = 1,
                            LastName = "Emerald",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 158949.0,
                            Street = "Gerlach Streets"
                        },
                        new
                        {
                            Id = 43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Runolfssonberg",
                            ContractDate = new DateTime(2022, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brazil",
                            DeptID = 1,
                            Email = "employee43@hrsm.com",
                            FirstName = "Max",
                            Gender = 1,
                            LastName = "Burnice",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 370711.0,
                            Street = "Wisoky Summit"
                        },
                        new
                        {
                            Id = 44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Maudetown",
                            ContractDate = new DateTime(2021, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malawi",
                            DeptID = 3,
                            Email = "employee44@hrsm.com",
                            FirstName = "Dane",
                            Gender = 1,
                            LastName = "Odie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 497118.0,
                            Street = "Schneider Orchard"
                        },
                        new
                        {
                            Id = 45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Kelton",
                            ContractDate = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Niue",
                            DeptID = 1,
                            Email = "employee45@hrsm.com",
                            FirstName = "Hans",
                            Gender = 1,
                            LastName = "Dortha",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 218499.0,
                            Street = "Barton Ramp"
                        },
                        new
                        {
                            Id = 46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Sengerborough",
                            ContractDate = new DateTime(2021, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bulgaria",
                            DeptID = 3,
                            Email = "employee46@hrsm.com",
                            FirstName = "Harmon",
                            Gender = 1,
                            LastName = "Benton",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 51933.0,
                            Street = "Pollich Trail"
                        },
                        new
                        {
                            Id = 47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Rutherfordport",
                            ContractDate = new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Zimbabwe",
                            DeptID = 3,
                            Email = "employee47@hrsm.com",
                            FirstName = "Betty",
                            Gender = 0,
                            LastName = "Ted",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 69365.0,
                            Street = "Bailey Manors"
                        },
                        new
                        {
                            Id = 48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ambrosechester",
                            ContractDate = new DateTime(2020, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sudan",
                            DeptID = 2,
                            Email = "employee48@hrsm.com",
                            FirstName = "Freeman",
                            Gender = 1,
                            LastName = "Orland",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 364749.0,
                            Street = "Santina Locks"
                        },
                        new
                        {
                            Id = 49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Farrellton",
                            ContractDate = new DateTime(2022, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Denmark",
                            DeptID = 2,
                            Email = "employee49@hrsm.com",
                            FirstName = "Felix",
                            Gender = 1,
                            LastName = "Julia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 226304.0,
                            Street = "Jaskolski Ways"
                        },
                        new
                        {
                            Id = 50,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Carolinastad",
                            ContractDate = new DateTime(2021, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kyrgyz Republic",
                            DeptID = 3,
                            Email = "employee50@hrsm.com",
                            FirstName = "Troy",
                            Gender = 1,
                            LastName = "Enrico",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 261011.0,
                            Street = "Kohler Lodge"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayOvernumberofvacationInyear")
                        .HasColumnType("int");

                    b.Property<int>("numberofvacationInyear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSetting", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountHourPrice = 150,
                            ExtraHourPrice = 75,
                            PriceForDayOvernumberofvacationInyear = 300,
                            numberofvacationInyear = 21
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = 9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = 13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = 18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = 21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = 22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = 24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = 25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = 26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = 27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = 28,
                            Name = "OfficialVacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = 29,
                            Name = "Vacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = 30,
                            Name = "Vacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = 31,
                            Name = "Vacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = 32,
                            Name = "Vacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = 34,
                            Name = "GeneralSetting",
                            Operation = 1
                        },
                        new
                        {
                            Id = 35,
                            Name = "GeneralSetting",
                            Operation = 2
                        },
                        new
                        {
                            Id = 36,
                            Name = "Salary",
                            Operation = 1
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.Property<string>("Holiday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Genral_Id")
                        .HasColumnType("int");

                    b.HasKey("Holiday", "Genral_Id");

                    b.HasIndex("Genral_Id");

                    b.ToTable("WeeklyHolidays", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Extra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SettingViewModel", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.WeekDaysViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SettingViewModelid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SettingViewModelid");

                    b.ToTable("WeekDaysViewModel", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.HasOne("FinalProject.Models.GeneralSetting", "GenrealSetting")
                        .WithMany("DayOffPerWeek")
                        .HasForeignKey("Genral_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenrealSetting");
                });

            modelBuilder.Entity("FinalProject.ViewModels.WeekDaysViewModel", b =>
                {
                    b.HasOne("FinalProject.ViewModels.SettingViewModel", null)
                        .WithMany("DayChecked")
                        .HasForeignKey("SettingViewModelid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Navigation("DayOffPerWeek");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Navigation("DayChecked");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231001012314_ahmedaymanwahebbs")]
    partial class ahmedaymanwahebbs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -28
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "a2aab11f-5224-4fb1-aa84-5261f04911c1",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Department 1"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Department 2"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Department 3"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Department 4"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Myaview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Netherlands Antilles",
                            DeptID = -4,
                            Email = "employee-1@example.com",
                            FirstName = "Celestino",
                            Gender = 0,
                            LastName = "Maximilian",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 313802.0,
                            Street = "Ottilie Mall"
                        },
                        new
                        {
                            Id = -2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Carolynhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Poland",
                            DeptID = -4,
                            Email = "employee-2@example.com",
                            FirstName = "Chelsey",
                            Gender = 0,
                            LastName = "Ollie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 173196.0,
                            Street = "Adriana Prairie"
                        },
                        new
                        {
                            Id = -3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Aracelystad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cook Islands",
                            DeptID = -4,
                            Email = "employee-3@example.com",
                            FirstName = "Muriel",
                            Gender = 0,
                            LastName = "Marcella",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 55486.0,
                            Street = "Charlotte Loop"
                        },
                        new
                        {
                            Id = -4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Andrewville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cameroon",
                            DeptID = -2,
                            Email = "employee-4@example.com",
                            FirstName = "Jody",
                            Gender = 1,
                            LastName = "Adela",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 342815.0,
                            Street = "Muhammad Cliff"
                        },
                        new
                        {
                            Id = -5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Cassinberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Djibouti",
                            DeptID = -3,
                            Email = "employee-5@example.com",
                            FirstName = "Eliezer",
                            Gender = 0,
                            LastName = "Mazie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 129952.0,
                            Street = "Ceasar Garden"
                        },
                        new
                        {
                            Id = -6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Collinsmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "French Guiana",
                            DeptID = -3,
                            Email = "employee-6@example.com",
                            FirstName = "Mohammed",
                            Gender = 0,
                            LastName = "Eugenia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 107071.0,
                            Street = "Gislason Divide"
                        },
                        new
                        {
                            Id = -7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Brownview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nigeria",
                            DeptID = -3,
                            Email = "employee-7@example.com",
                            FirstName = "Derek",
                            Gender = 0,
                            LastName = "Alba",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 347426.0,
                            Street = "Jane Courts"
                        },
                        new
                        {
                            Id = -8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Eichmannmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gambia",
                            DeptID = -4,
                            Email = "employee-8@example.com",
                            FirstName = "Constance",
                            Gender = 0,
                            LastName = "Delia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 345641.0,
                            Street = "Parisian Station"
                        },
                        new
                        {
                            Id = -9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Trentonside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Slovakia (Slovak Republic)",
                            DeptID = -2,
                            Email = "employee-9@example.com",
                            FirstName = "Karianne",
                            Gender = 0,
                            LastName = "Jordy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 245042.0,
                            Street = "Amparo Brooks"
                        },
                        new
                        {
                            Id = -10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Margeview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cambodia",
                            DeptID = -2,
                            Email = "employee-10@example.com",
                            FirstName = "Stephan",
                            Gender = 0,
                            LastName = "Daryl",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 9339.0,
                            Street = "Heathcote Valley"
                        },
                        new
                        {
                            Id = -11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lorenzashire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bhutan",
                            DeptID = -1,
                            Email = "employee-11@example.com",
                            FirstName = "Lorenza",
                            Gender = 0,
                            LastName = "Lindsay",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 445898.0,
                            Street = "Magdalen Meadows"
                        },
                        new
                        {
                            Id = -12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Cruickshankborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "French Southern Territories",
                            DeptID = -2,
                            Email = "employee-12@example.com",
                            FirstName = "Meghan",
                            Gender = 0,
                            LastName = "Corbin",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 359138.0,
                            Street = "Arianna Manors"
                        },
                        new
                        {
                            Id = -13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Winston",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Jordan",
                            DeptID = -2,
                            Email = "employee-13@example.com",
                            FirstName = "Baby",
                            Gender = 1,
                            LastName = "Olaf",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 323769.0,
                            Street = "Hegmann Flat"
                        },
                        new
                        {
                            Id = -14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Blaise",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Micronesia",
                            DeptID = -1,
                            Email = "employee-14@example.com",
                            FirstName = "Orion",
                            Gender = 1,
                            LastName = "Flo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 52322.0,
                            Street = "Davis Heights"
                        },
                        new
                        {
                            Id = -15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Leifland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Central African Republic",
                            DeptID = -3,
                            Email = "employee-15@example.com",
                            FirstName = "Aron",
                            Gender = 1,
                            LastName = "Eleanora",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 491870.0,
                            Street = "Kamryn Heights"
                        },
                        new
                        {
                            Id = -16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Josiahchester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Martinique",
                            DeptID = -2,
                            Email = "employee-16@example.com",
                            FirstName = "Forest",
                            Gender = 0,
                            LastName = "Jasper",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 43137.0,
                            Street = "Richie Village"
                        },
                        new
                        {
                            Id = -17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Charitystad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kyrgyz Republic",
                            DeptID = -4,
                            Email = "employee-17@example.com",
                            FirstName = "Eula",
                            Gender = 0,
                            LastName = "Myriam",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 128081.0,
                            Street = "Dare Loop"
                        },
                        new
                        {
                            Id = -18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ryanchester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Puerto Rico",
                            DeptID = -4,
                            Email = "employee-18@example.com",
                            FirstName = "Raphael",
                            Gender = 1,
                            LastName = "Dax",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 12581.0,
                            Street = "Helga Hollow"
                        },
                        new
                        {
                            Id = -19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Shirleyberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Barthelemy",
                            DeptID = -4,
                            Email = "employee-19@example.com",
                            FirstName = "Amiya",
                            Gender = 0,
                            LastName = "Anabel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 155234.0,
                            Street = "Marvin Dam"
                        },
                        new
                        {
                            Id = -20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Clarabellechester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Norway",
                            DeptID = -2,
                            Email = "employee-20@example.com",
                            FirstName = "Justina",
                            Gender = 0,
                            LastName = "Celestine",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 377907.0,
                            Street = "Jovany Islands"
                        },
                        new
                        {
                            Id = -21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Janetchester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Lao People's Democratic Republic",
                            DeptID = -2,
                            Email = "employee-21@example.com",
                            FirstName = "Felipe",
                            Gender = 0,
                            LastName = "Lauren",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 163419.0,
                            Street = "Magdalen Prairie"
                        },
                        new
                        {
                            Id = -22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Jackiebury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Burundi",
                            DeptID = -4,
                            Email = "employee-22@example.com",
                            FirstName = "Sigmund",
                            Gender = 1,
                            LastName = "Afton",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 60103.0,
                            Street = "Ankunding Mission"
                        },
                        new
                        {
                            Id = -23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Jerodchester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "South Africa",
                            DeptID = -2,
                            Email = "employee-23@example.com",
                            FirstName = "Alexander",
                            Gender = 0,
                            LastName = "Randal",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 291060.0,
                            Street = "Krajcik "
                        },
                        new
                        {
                            Id = -24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kelsistad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Niue",
                            DeptID = -4,
                            Email = "employee-24@example.com",
                            FirstName = "Wiley",
                            Gender = 0,
                            LastName = "Coby",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 34304.0,
                            Street = "Elmira Brook"
                        },
                        new
                        {
                            Id = -25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Gloriastad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Holy See (Vatican City State)",
                            DeptID = -2,
                            Email = "employee-25@example.com",
                            FirstName = "Ilene",
                            Gender = 1,
                            LastName = "Jazmyne",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 170614.0,
                            Street = "Mueller Forest"
                        },
                        new
                        {
                            Id = -26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Christina",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Martinique",
                            DeptID = -1,
                            Email = "employee-26@example.com",
                            FirstName = "Paris",
                            Gender = 0,
                            LastName = "Beulah",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 44198.0,
                            Street = "Gislason Squares"
                        },
                        new
                        {
                            Id = -27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Dorthaton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Maldives",
                            DeptID = -3,
                            Email = "employee-27@example.com",
                            FirstName = "Emelie",
                            Gender = 0,
                            LastName = "Adelbert",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 191181.0,
                            Street = "Kale Common"
                        },
                        new
                        {
                            Id = -28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Destineyfort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Tuvalu",
                            DeptID = -4,
                            Email = "employee-28@example.com",
                            FirstName = "April",
                            Gender = 1,
                            LastName = "Savanna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 484628.0,
                            Street = "Kianna Streets"
                        },
                        new
                        {
                            Id = -29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Torpfurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Holy See (Vatican City State)",
                            DeptID = -4,
                            Email = "employee-29@example.com",
                            FirstName = "Alda",
                            Gender = 0,
                            LastName = "Dock",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 187388.0,
                            Street = "Owen Island"
                        },
                        new
                        {
                            Id = -30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Reinholdview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Vanuatu",
                            DeptID = -2,
                            Email = "employee-30@example.com",
                            FirstName = "Jamal",
                            Gender = 1,
                            LastName = "Sage",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 401787.0,
                            Street = "Nichole Road"
                        },
                        new
                        {
                            Id = -31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Donnaberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Panama",
                            DeptID = -2,
                            Email = "employee-31@example.com",
                            FirstName = "Alana",
                            Gender = 1,
                            LastName = "Lambert",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 351334.0,
                            Street = "Jailyn Track"
                        },
                        new
                        {
                            Id = -32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Camryn",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Andorra",
                            DeptID = -3,
                            Email = "employee-32@example.com",
                            FirstName = "Noah",
                            Gender = 0,
                            LastName = "Gladyce",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 381544.0,
                            Street = "Kub Summit"
                        },
                        new
                        {
                            Id = -33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Joseph",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "San Marino",
                            DeptID = -3,
                            Email = "employee-33@example.com",
                            FirstName = "Alanis",
                            Gender = 1,
                            LastName = "Rosendo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 10654.0,
                            Street = "Kirlin Roads"
                        },
                        new
                        {
                            Id = -34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Doyle",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Egypt",
                            DeptID = -1,
                            Email = "employee-34@example.com",
                            FirstName = "Ayana",
                            Gender = 0,
                            LastName = "Rebeca",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 232230.0,
                            Street = "Predovic Harbor"
                        },
                        new
                        {
                            Id = -35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Magdalenborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Denmark",
                            DeptID = -2,
                            Email = "employee-35@example.com",
                            FirstName = "Daniela",
                            Gender = 1,
                            LastName = "Eduardo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 214553.0,
                            Street = "Daniel Trace"
                        },
                        new
                        {
                            Id = -36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Blaze",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Belgium",
                            DeptID = -4,
                            Email = "employee-36@example.com",
                            FirstName = "Norberto",
                            Gender = 0,
                            LastName = "Skylar",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 380399.0,
                            Street = "June Pike"
                        },
                        new
                        {
                            Id = -37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Dejonfort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Heard Island and McDonald Islands",
                            DeptID = -3,
                            Email = "employee-37@example.com",
                            FirstName = "Zachary",
                            Gender = 1,
                            LastName = "Aurelio",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 475413.0,
                            Street = "Dooley Run"
                        },
                        new
                        {
                            Id = -38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Watsonstad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Martin",
                            DeptID = -3,
                            Email = "employee-38@example.com",
                            FirstName = "Jordane",
                            Gender = 0,
                            LastName = "Mike",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 185877.0,
                            Street = "Harvey Greens"
                        },
                        new
                        {
                            Id = -39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Tyreekview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Equatorial Guinea",
                            DeptID = -2,
                            Email = "employee-39@example.com",
                            FirstName = "Myrtice",
                            Gender = 1,
                            LastName = "Providenci",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 443063.0,
                            Street = "Tony Crescent"
                        },
                        new
                        {
                            Id = -40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Joseph",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ukraine",
                            DeptID = -3,
                            Email = "employee-40@example.com",
                            FirstName = "Benjamin",
                            Gender = 1,
                            LastName = "Willard",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 287234.0,
                            Street = "Runte Cliffs"
                        },
                        new
                        {
                            Id = -41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lancetown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cayman Islands",
                            DeptID = -3,
                            Email = "employee-41@example.com",
                            FirstName = "Geo",
                            Gender = 1,
                            LastName = "Elliott",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 410813.0,
                            Street = "Metz Plaza"
                        },
                        new
                        {
                            Id = -42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Sidneyberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Korea",
                            DeptID = -1,
                            Email = "employee-42@example.com",
                            FirstName = "Christian",
                            Gender = 0,
                            LastName = "Macy",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 376095.0,
                            Street = "Justus Junction"
                        },
                        new
                        {
                            Id = -43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ignatiusmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kenya",
                            DeptID = -3,
                            Email = "employee-43@example.com",
                            FirstName = "Garrison",
                            Gender = 0,
                            LastName = "Yesenia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 160974.0,
                            Street = "McGlynn Mountains"
                        },
                        new
                        {
                            Id = -44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Schaeferside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Armenia",
                            DeptID = -2,
                            Email = "employee-44@example.com",
                            FirstName = "Dewayne",
                            Gender = 1,
                            LastName = "Anissa",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 177981.0,
                            Street = "Carlie Brook"
                        },
                        new
                        {
                            Id = -45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Mallie",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ukraine",
                            DeptID = -1,
                            Email = "employee-45@example.com",
                            FirstName = "Columbus",
                            Gender = 0,
                            LastName = "Stephan",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 167773.0,
                            Street = "Toy Roads"
                        },
                        new
                        {
                            Id = -46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Sagefort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brazil",
                            DeptID = -1,
                            Email = "employee-46@example.com",
                            FirstName = "Heidi",
                            Gender = 0,
                            LastName = "Henriette",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 464590.0,
                            Street = "America Court"
                        },
                        new
                        {
                            Id = -47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Marvintown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Eritrea",
                            DeptID = -4,
                            Email = "employee-47@example.com",
                            FirstName = "Lucas",
                            Gender = 1,
                            LastName = "Providenci",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 414770.0,
                            Street = "Preston Knoll"
                        },
                        new
                        {
                            Id = -48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Rhiannafurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Colombia",
                            DeptID = -3,
                            Email = "employee-48@example.com",
                            FirstName = "Lindsay",
                            Gender = 0,
                            LastName = "Roscoe",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 197639.0,
                            Street = "Afton Route"
                        },
                        new
                        {
                            Id = -49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Aimee",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Palau",
                            DeptID = -3,
                            Email = "employee-49@example.com",
                            FirstName = "Victor",
                            Gender = 1,
                            LastName = "Alverta",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 418871.0,
                            Street = "Lelia Turnpike"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = -3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = -4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = -5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = -6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = -7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = -8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = -9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = -10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = -11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = -12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = -13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = -14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = -15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = -16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = -17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = -18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = -19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = -20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = -21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = -22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = -23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = -24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = -25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -28,
                            Name = "OfficialVacation",
                            Operation = 0
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FulllName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}

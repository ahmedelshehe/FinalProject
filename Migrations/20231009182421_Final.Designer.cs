// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231009182421_Final")]
    partial class Final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 28
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 29
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 30
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 31
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 32
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 34
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 35
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = 36
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "8844d434-0e8d-48a7-ab77-902b7330f1ef",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "R & D"
                        },
                        new
                        {
                            Id = 3,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Hintzton",
                            ContractDate = new DateTime(2020, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Madagascar",
                            DeptID = 2,
                            Email = "employee1@hrsm.com",
                            FirstName = "Kareem",
                            Gender = 0,
                            LastName = "Noble",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 339679.0,
                            Street = "Klocko Circle"
                        },
                        new
                        {
                            Id = 2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1998, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Timmothy",
                            ContractDate = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Lebanon",
                            DeptID = 1,
                            Email = "employee2@hrsm.com",
                            FirstName = "Dixie",
                            Gender = 0,
                            LastName = "Celestino",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 480082.0,
                            Street = "Corene Corners"
                        },
                        new
                        {
                            Id = 3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1996, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Noemiefurt",
                            ContractDate = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Switzerland",
                            DeptID = 3,
                            Email = "employee3@hrsm.com",
                            FirstName = "Sheldon",
                            Gender = 0,
                            LastName = "Antonia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 383114.0,
                            Street = "Barton Neck"
                        },
                        new
                        {
                            Id = 4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Macy",
                            ContractDate = new DateTime(2020, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Belarus",
                            DeptID = 1,
                            Email = "employee4@hrsm.com",
                            FirstName = "Dan",
                            Gender = 1,
                            LastName = "Russell",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 158283.0,
                            Street = "Kertzmann Groves"
                        },
                        new
                        {
                            Id = 5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Ernabury",
                            ContractDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Palau",
                            DeptID = 2,
                            Email = "employee5@hrsm.com",
                            FirstName = "Jessy",
                            Gender = 1,
                            LastName = "Cristopher",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 180025.0,
                            Street = "Jarvis Springs"
                        },
                        new
                        {
                            Id = 6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2000, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Hendersonberg",
                            ContractDate = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Slovenia",
                            DeptID = 3,
                            Email = "employee6@hrsm.com",
                            FirstName = "Jordi",
                            Gender = 1,
                            LastName = "Evan",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 38096.0,
                            Street = "Lebsack Forest"
                        },
                        new
                        {
                            Id = 7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Narciso",
                            ContractDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bhutan",
                            DeptID = 2,
                            Email = "employee7@hrsm.com",
                            FirstName = "Ofelia",
                            Gender = 0,
                            LastName = "Andre",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 366775.0,
                            Street = "Bernice Forks"
                        },
                        new
                        {
                            Id = 8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Nicklausmouth",
                            ContractDate = new DateTime(2020, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Portugal",
                            DeptID = 2,
                            Email = "employee8@hrsm.com",
                            FirstName = "Hazle",
                            Gender = 1,
                            LastName = "Edd",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 448698.0,
                            Street = "Skiles Oval"
                        },
                        new
                        {
                            Id = 9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Kailey",
                            ContractDate = new DateTime(2020, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Martinique",
                            DeptID = 3,
                            Email = "employee9@hrsm.com",
                            FirstName = "Caitlyn",
                            Gender = 1,
                            LastName = "Jazmyn",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 394820.0,
                            Street = "Kshlerin Shoals"
                        },
                        new
                        {
                            Id = 10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Christinachester",
                            ContractDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gambia",
                            DeptID = 1,
                            Email = "employee10@hrsm.com",
                            FirstName = "Jarrod",
                            Gender = 1,
                            LastName = "Elton",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 212722.0,
                            Street = "Mireille Crossing"
                        },
                        new
                        {
                            Id = 11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1996, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Wendyport",
                            ContractDate = new DateTime(2023, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mexico",
                            DeptID = 3,
                            Email = "employee11@hrsm.com",
                            FirstName = "Destiny",
                            Gender = 1,
                            LastName = "Trisha",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 212686.0,
                            Street = "Johnson Forge"
                        },
                        new
                        {
                            Id = 12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Heaneyberg",
                            ContractDate = new DateTime(2022, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Barbados",
                            DeptID = 3,
                            Email = "employee12@hrsm.com",
                            FirstName = "Olin",
                            Gender = 0,
                            LastName = "Everette",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 300193.0,
                            Street = "Caitlyn Port"
                        },
                        new
                        {
                            Id = 13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Kassandra",
                            ContractDate = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Vincent and the Grenadines",
                            DeptID = 3,
                            Email = "employee13@hrsm.com",
                            FirstName = "Paxton",
                            Gender = 1,
                            LastName = "Electa",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 275545.0,
                            Street = "Hilll Crest"
                        },
                        new
                        {
                            Id = 14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Willard",
                            ContractDate = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Uganda",
                            DeptID = 3,
                            Email = "employee14@hrsm.com",
                            FirstName = "Jayden",
                            Gender = 0,
                            LastName = "Gus",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 334106.0,
                            Street = "Anderson Views"
                        },
                        new
                        {
                            Id = 15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Danialborough",
                            ContractDate = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Latvia",
                            DeptID = 2,
                            Email = "employee15@hrsm.com",
                            FirstName = "Destany",
                            Gender = 1,
                            LastName = "Leonie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 170403.0,
                            Street = "Mekhi Forge"
                        },
                        new
                        {
                            Id = 16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Zoiebury",
                            ContractDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Congo",
                            DeptID = 2,
                            Email = "employee16@hrsm.com",
                            FirstName = "Isaias",
                            Gender = 0,
                            LastName = "Glen",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 247431.0,
                            Street = "Tyson Way"
                        },
                        new
                        {
                            Id = 17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Zeldafort",
                            ContractDate = new DateTime(2022, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Iceland",
                            DeptID = 3,
                            Email = "employee17@hrsm.com",
                            FirstName = "Dorthy",
                            Gender = 0,
                            LastName = "Granville",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 359214.0,
                            Street = "Mohr Mountain"
                        },
                        new
                        {
                            Id = 18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Darwin",
                            ContractDate = new DateTime(2020, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            DeptID = 1,
                            Email = "employee18@hrsm.com",
                            FirstName = "Roxane",
                            Gender = 1,
                            LastName = "Tommie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 201763.0,
                            Street = "Block Streets"
                        },
                        new
                        {
                            Id = 19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Bradleymouth",
                            ContractDate = new DateTime(2023, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cameroon",
                            DeptID = 1,
                            Email = "employee19@hrsm.com",
                            FirstName = "Raul",
                            Gender = 0,
                            LastName = "Tiara",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 395909.0,
                            Street = "Walsh Skyway"
                        },
                        new
                        {
                            Id = 20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Isomburgh",
                            ContractDate = new DateTime(2022, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bhutan",
                            DeptID = 1,
                            Email = "employee20@hrsm.com",
                            FirstName = "Raven",
                            Gender = 1,
                            LastName = "Rosanna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 203037.0,
                            Street = "Dillon Throughway"
                        },
                        new
                        {
                            Id = 21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Watershaven",
                            ContractDate = new DateTime(2022, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "San Marino",
                            DeptID = 3,
                            Email = "employee21@hrsm.com",
                            FirstName = "Adrain",
                            Gender = 0,
                            LastName = "Randi",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 48721.0,
                            Street = "Matt Crest"
                        },
                        new
                        {
                            Id = 22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Talonborough",
                            ContractDate = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Portugal",
                            DeptID = 2,
                            Email = "employee22@hrsm.com",
                            FirstName = "Cristobal",
                            Gender = 1,
                            LastName = "Tad",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 451102.0,
                            Street = "Buckridge Dam"
                        },
                        new
                        {
                            Id = 23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Fadelton",
                            ContractDate = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cameroon",
                            DeptID = 3,
                            Email = "employee23@hrsm.com",
                            FirstName = "Reanna",
                            Gender = 0,
                            LastName = "Yoshiko",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 357435.0,
                            Street = "Adams Coves"
                        },
                        new
                        {
                            Id = 24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1998, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ryanhaven",
                            ContractDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Turks and Caicos Islands",
                            DeptID = 3,
                            Email = "employee24@hrsm.com",
                            FirstName = "Berta",
                            Gender = 1,
                            LastName = "Joey",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 125594.0,
                            Street = "Walsh Path"
                        },
                        new
                        {
                            Id = 25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1995, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Trantowview",
                            ContractDate = new DateTime(2022, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gabon",
                            DeptID = 1,
                            Email = "employee25@hrsm.com",
                            FirstName = "Hank",
                            Gender = 1,
                            LastName = "Gaston",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 90754.0,
                            Street = "Stanton Divide"
                        },
                        new
                        {
                            Id = 26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Fridafurt",
                            ContractDate = new DateTime(2022, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bahamas",
                            DeptID = 3,
                            Email = "employee26@hrsm.com",
                            FirstName = "Charles",
                            Gender = 1,
                            LastName = "Freda",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 452820.0,
                            Street = "Runolfsson Highway"
                        },
                        new
                        {
                            Id = 27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Loycetown",
                            ContractDate = new DateTime(2021, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Anguilla",
                            DeptID = 3,
                            Email = "employee27@hrsm.com",
                            FirstName = "Weldon",
                            Gender = 0,
                            LastName = "Ellsworth",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 224585.0,
                            Street = "Alexys Light"
                        },
                        new
                        {
                            Id = 28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Sengerberg",
                            ContractDate = new DateTime(2022, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Greenland",
                            DeptID = 2,
                            Email = "employee28@hrsm.com",
                            FirstName = "Randall",
                            Gender = 0,
                            LastName = "Odie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 182602.0,
                            Street = "Germaine Stravenue"
                        },
                        new
                        {
                            Id = 29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Curtisside",
                            ContractDate = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brazil",
                            DeptID = 1,
                            Email = "employee29@hrsm.com",
                            FirstName = "Wilton",
                            Gender = 0,
                            LastName = "Pablo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 82769.0,
                            Street = "Darrick Turnpike"
                        },
                        new
                        {
                            Id = 30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Luciano",
                            ContractDate = new DateTime(2022, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Arab Emirates",
                            DeptID = 1,
                            Email = "employee30@hrsm.com",
                            FirstName = "Kathryne",
                            Gender = 0,
                            LastName = "Gregoria",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 97273.0,
                            Street = "Ladarius Ports"
                        },
                        new
                        {
                            Id = 31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Zoe",
                            ContractDate = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cambodia",
                            DeptID = 3,
                            Email = "employee31@hrsm.com",
                            FirstName = "Edgardo",
                            Gender = 1,
                            LastName = "Mathew",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 114275.0,
                            Street = "Swaniawski Crossroad"
                        },
                        new
                        {
                            Id = 32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1996, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Ariel",
                            ContractDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Lucia",
                            DeptID = 2,
                            Email = "employee32@hrsm.com",
                            FirstName = "Dudley",
                            Gender = 0,
                            LastName = "Lorenz",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 398911.0,
                            Street = "Mae Green"
                        },
                        new
                        {
                            Id = 33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dibbertberg",
                            ContractDate = new DateTime(2021, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Palau",
                            DeptID = 3,
                            Email = "employee33@hrsm.com",
                            FirstName = "Thora",
                            Gender = 1,
                            LastName = "Mozell",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 23514.0,
                            Street = "Rhea Mews"
                        },
                        new
                        {
                            Id = 34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2000, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Charlieborough",
                            ContractDate = new DateTime(2021, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Uzbekistan",
                            DeptID = 2,
                            Email = "employee34@hrsm.com",
                            FirstName = "Bernie",
                            Gender = 1,
                            LastName = "Angie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 497478.0,
                            Street = "Paucek Pass"
                        },
                        new
                        {
                            Id = 35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Brannon",
                            ContractDate = new DateTime(2021, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Eritrea",
                            DeptID = 1,
                            Email = "employee35@hrsm.com",
                            FirstName = "Berniece",
                            Gender = 0,
                            LastName = "Gaston",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 369083.0,
                            Street = "Mable Meadow"
                        },
                        new
                        {
                            Id = 36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Ciara",
                            ContractDate = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bangladesh",
                            DeptID = 3,
                            Email = "employee36@hrsm.com",
                            FirstName = "Leonie",
                            Gender = 1,
                            LastName = "Etha",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 181746.0,
                            Street = "Carter Pine"
                        },
                        new
                        {
                            Id = 37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Delilah",
                            ContractDate = new DateTime(2022, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "British Virgin Islands",
                            DeptID = 3,
                            Email = "employee37@hrsm.com",
                            FirstName = "Sydney",
                            Gender = 0,
                            LastName = "Jamaal",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 76024.0,
                            Street = "Roosevelt Well"
                        },
                        new
                        {
                            Id = 38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1996, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Cristopherport",
                            ContractDate = new DateTime(2022, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Svalbard & Jan Mayen Islands",
                            DeptID = 3,
                            Email = "employee38@hrsm.com",
                            FirstName = "Ashleigh",
                            Gender = 0,
                            LastName = "Carroll",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 160526.0,
                            Street = "Bartoletti Rest"
                        },
                        new
                        {
                            Id = 39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Leannonberg",
                            ContractDate = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cuba",
                            DeptID = 3,
                            Email = "employee39@hrsm.com",
                            FirstName = "Eliseo",
                            Gender = 1,
                            LastName = "Parker",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 419117.0,
                            Street = "Larson Garden"
                        },
                        new
                        {
                            Id = 40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dibbertberg",
                            ContractDate = new DateTime(2020, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Vanuatu",
                            DeptID = 2,
                            Email = "employee40@hrsm.com",
                            FirstName = "Kristin",
                            Gender = 0,
                            LastName = "Brian",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 430265.0,
                            Street = "Lane Brooks"
                        },
                        new
                        {
                            Id = 41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Wymanside",
                            ContractDate = new DateTime(2020, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Marshall Islands",
                            DeptID = 2,
                            Email = "employee41@hrsm.com",
                            FirstName = "Milan",
                            Gender = 1,
                            LastName = "Abigayle",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 226701.0,
                            Street = "Hermiston Vista"
                        },
                        new
                        {
                            Id = 42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Nicolasport",
                            ContractDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Panama",
                            DeptID = 1,
                            Email = "employee42@hrsm.com",
                            FirstName = "Jannie",
                            Gender = 1,
                            LastName = "Brenden",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 14939.0,
                            Street = "Connelly Street"
                        },
                        new
                        {
                            Id = 43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Bailey",
                            ContractDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Myanmar",
                            DeptID = 1,
                            Email = "employee43@hrsm.com",
                            FirstName = "Quinton",
                            Gender = 1,
                            LastName = "Vernon",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 289495.0,
                            Street = "Olson Inlet"
                        },
                        new
                        {
                            Id = 44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1991, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Giovannitown",
                            ContractDate = new DateTime(2021, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gambia",
                            DeptID = 1,
                            Email = "employee44@hrsm.com",
                            FirstName = "Ahmad",
                            Gender = 1,
                            LastName = "Kacey",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 7086.0,
                            Street = "Freeman Vista"
                        },
                        new
                        {
                            Id = 45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Citlallifort",
                            ContractDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Angola",
                            DeptID = 2,
                            Email = "employee45@hrsm.com",
                            FirstName = "Nathan",
                            Gender = 0,
                            LastName = "Keira",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 450754.0,
                            Street = "Marge Village"
                        },
                        new
                        {
                            Id = 46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Bernardo",
                            ContractDate = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Finland",
                            DeptID = 2,
                            Email = "employee46@hrsm.com",
                            FirstName = "Amie",
                            Gender = 1,
                            LastName = "Juliet",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 309569.0,
                            Street = "Alana Vista"
                        },
                        new
                        {
                            Id = 47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Destinshire",
                            ContractDate = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Montenegro",
                            DeptID = 1,
                            Email = "employee47@hrsm.com",
                            FirstName = "Bettie",
                            Gender = 0,
                            LastName = "Arnold",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 304288.0,
                            Street = "Kendrick Bypass"
                        },
                        new
                        {
                            Id = 48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Yundtfort",
                            ContractDate = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saudi Arabia",
                            DeptID = 1,
                            Email = "employee48@hrsm.com",
                            FirstName = "Dion",
                            Gender = 0,
                            LastName = "Mike",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 403086.0,
                            Street = "Hardy Canyon"
                        },
                        new
                        {
                            Id = 49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1997, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Rozella",
                            ContractDate = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cayman Islands",
                            DeptID = 1,
                            Email = "employee49@hrsm.com",
                            FirstName = "Alberto",
                            Gender = 0,
                            LastName = "Garrett",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 12504.0,
                            Street = "Ismael Gateway"
                        },
                        new
                        {
                            Id = 50,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1994, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Sandrineland",
                            ContractDate = new DateTime(2021, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Swaziland",
                            DeptID = 3,
                            Email = "employee50@hrsm.com",
                            FirstName = "Maximillia",
                            Gender = 1,
                            LastName = "Ethel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 103320.0,
                            Street = "Rosenbaum Villages"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayOvernumberofvacationInyear")
                        .HasColumnType("int");

                    b.Property<int>("numberofvacationInyear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSetting", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountHourPrice = 150,
                            ExtraHourPrice = 75,
                            PriceForDayOvernumberofvacationInyear = 300,
                            numberofvacationInyear = 21
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = 9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = 13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = 18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = 21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = 22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = 24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = 25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = 26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = 27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = 28,
                            Name = "OfficialVacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = 29,
                            Name = "Vacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = 30,
                            Name = "Vacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = 31,
                            Name = "Vacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = 32,
                            Name = "Vacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = 34,
                            Name = "GeneralSetting",
                            Operation = 1
                        },
                        new
                        {
                            Id = 35,
                            Name = "GeneralSetting",
                            Operation = 2
                        },
                        new
                        {
                            Id = 36,
                            Name = "Salary",
                            Operation = 1
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.Property<string>("Holiday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Genral_Id")
                        .HasColumnType("int");

                    b.HasKey("Holiday", "Genral_Id");

                    b.HasIndex("Genral_Id");

                    b.ToTable("WeeklyHolidays", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Extra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SettingViewModel", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.WeekDaysViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SettingViewModelid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SettingViewModelid");

                    b.ToTable("WeekDaysViewModel", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.HasOne("FinalProject.Models.GeneralSetting", "GenrealSetting")
                        .WithMany("DayOffPerWeek")
                        .HasForeignKey("Genral_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenrealSetting");
                });

            modelBuilder.Entity("FinalProject.ViewModels.WeekDaysViewModel", b =>
                {
                    b.HasOne("FinalProject.ViewModels.SettingViewModel", null)
                        .WithMany("DayChecked")
                        .HasForeignKey("SettingViewModelid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Navigation("DayOffPerWeek");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Navigation("DayChecked");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231002212415_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -28
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -30
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -31
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -32
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "be9e501e-8040-4a2c-a1eb-c0d2c49f5236",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Department 1"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Department 2"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Department 3"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Department 4"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Alessandroview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Botswana",
                            DeptID = -3,
                            Email = "employee-1@example.com",
                            FirstName = "Eulalia",
                            Gender = 0,
                            LastName = "Oran",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 470155.0,
                            Street = "Grimes Forks"
                        },
                        new
                        {
                            Id = -2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Rhiannon",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Serbia",
                            DeptID = -2,
                            Email = "employee-2@example.com",
                            FirstName = "Krystina",
                            Gender = 1,
                            LastName = "Ryder",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 168229.0,
                            Street = "Lelah Mount"
                        },
                        new
                        {
                            Id = -3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Willbury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Faroe Islands",
                            DeptID = -1,
                            Email = "employee-3@example.com",
                            FirstName = "Camden",
                            Gender = 0,
                            LastName = "Keanu",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 135398.0,
                            Street = "Melyssa Forest"
                        },
                        new
                        {
                            Id = -4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Rowena",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Guinea",
                            DeptID = -3,
                            Email = "employee-4@example.com",
                            FirstName = "Maida",
                            Gender = 0,
                            LastName = "Dena",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 414052.0,
                            Street = "Susanna Groves"
                        },
                        new
                        {
                            Id = -5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Sammiehaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Hungary",
                            DeptID = -3,
                            Email = "employee-5@example.com",
                            FirstName = "Francesco",
                            Gender = 1,
                            LastName = "Donavon",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 271772.0,
                            Street = "Tatum Summit"
                        },
                        new
                        {
                            Id = -6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lewisville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Zambia",
                            DeptID = -1,
                            Email = "employee-6@example.com",
                            FirstName = "Tanner",
                            Gender = 1,
                            LastName = "Cali",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 58514.0,
                            Street = "Hyatt Forest"
                        },
                        new
                        {
                            Id = -7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Jarrett",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Macedonia",
                            DeptID = -1,
                            Email = "employee-7@example.com",
                            FirstName = "Mireille",
                            Gender = 0,
                            LastName = "Caroline",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 160478.0,
                            Street = "Rowe Road"
                        },
                        new
                        {
                            Id = -8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Isaac",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Senegal",
                            DeptID = -1,
                            Email = "employee-8@example.com",
                            FirstName = "Billie",
                            Gender = 0,
                            LastName = "Lonnie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 407641.0,
                            Street = "Predovic Curve"
                        },
                        new
                        {
                            Id = -9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Abigalestad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malawi",
                            DeptID = -3,
                            Email = "employee-9@example.com",
                            FirstName = "Stanton",
                            Gender = 0,
                            LastName = "Flo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 443518.0,
                            Street = "Connelly Ranch"
                        },
                        new
                        {
                            Id = -10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Andreaneland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Germany",
                            DeptID = -4,
                            Email = "employee-10@example.com",
                            FirstName = "Amiya",
                            Gender = 0,
                            LastName = "Trever",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 422783.0,
                            Street = "Jairo Unions"
                        },
                        new
                        {
                            Id = -11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Velvashire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Puerto Rico",
                            DeptID = -1,
                            Email = "employee-11@example.com",
                            FirstName = "Alessia",
                            Gender = 0,
                            LastName = "Ryleigh",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 25585.0,
                            Street = "Swift Tunnel"
                        },
                        new
                        {
                            Id = -12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Runolfssonhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Trinidad and Tobago",
                            DeptID = -3,
                            Email = "employee-12@example.com",
                            FirstName = "Javon",
                            Gender = 1,
                            LastName = "Elfrieda",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 433607.0,
                            Street = "Cassin Haven"
                        },
                        new
                        {
                            Id = -13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Schmidtmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malta",
                            DeptID = -4,
                            Email = "employee-13@example.com",
                            FirstName = "Margaret",
                            Gender = 1,
                            LastName = "Bernie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 291646.0,
                            Street = "Casandra Cove"
                        },
                        new
                        {
                            Id = -14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Zack",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Ghana",
                            DeptID = -1,
                            Email = "employee-14@example.com",
                            FirstName = "Agustina",
                            Gender = 1,
                            LastName = "Nichole",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 358777.0,
                            Street = "Bartholome Viaduct"
                        },
                        new
                        {
                            Id = -15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Jaida",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Honduras",
                            DeptID = -1,
                            Email = "employee-15@example.com",
                            FirstName = "Violet",
                            Gender = 0,
                            LastName = "Victor",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 418014.0,
                            Street = "Gunner Summit"
                        },
                        new
                        {
                            Id = -16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Woodrow",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Turkmenistan",
                            DeptID = -2,
                            Email = "employee-16@example.com",
                            FirstName = "Josefa",
                            Gender = 0,
                            LastName = "Edmund",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 17399.0,
                            Street = "Auer Greens"
                        },
                        new
                        {
                            Id = -17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Mozelleberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kenya",
                            DeptID = -1,
                            Email = "employee-17@example.com",
                            FirstName = "Vallie",
                            Gender = 1,
                            LastName = "Bette",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 377083.0,
                            Street = "Devonte Shoal"
                        },
                        new
                        {
                            Id = -18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Emilstad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Philippines",
                            DeptID = -2,
                            Email = "employee-18@example.com",
                            FirstName = "Grayson",
                            Gender = 0,
                            LastName = "Gillian",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 423474.0,
                            Street = "Lisandro Burg"
                        },
                        new
                        {
                            Id = -19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Marquardtshire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cuba",
                            DeptID = -1,
                            Email = "employee-19@example.com",
                            FirstName = "Allen",
                            Gender = 1,
                            LastName = "Lindsey",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 115946.0,
                            Street = "Misael Lock"
                        },
                        new
                        {
                            Id = -20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Giovanna",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Iraq",
                            DeptID = -2,
                            Email = "employee-20@example.com",
                            FirstName = "Donald",
                            Gender = 0,
                            LastName = "Alba",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 334546.0,
                            Street = "Zoey Shore"
                        },
                        new
                        {
                            Id = -21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Antonia",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "South Georgia and the South Sandwich Islands",
                            DeptID = -4,
                            Email = "employee-21@example.com",
                            FirstName = "Stefanie",
                            Gender = 1,
                            LastName = "Anderson",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 277753.0,
                            Street = "Lenna Drive"
                        },
                        new
                        {
                            Id = -22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Guidofurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Algeria",
                            DeptID = -1,
                            Email = "employee-22@example.com",
                            FirstName = "Manley",
                            Gender = 1,
                            LastName = "Anthony",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 277274.0,
                            Street = "Blanca Ridges"
                        },
                        new
                        {
                            Id = -23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Keeblerport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "South Georgia and the South Sandwich Islands",
                            DeptID = -4,
                            Email = "employee-23@example.com",
                            FirstName = "Imogene",
                            Gender = 0,
                            LastName = "Lilly",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 276256.0,
                            Street = "Kendrick Plains"
                        },
                        new
                        {
                            Id = -24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Genevieveshire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sierra Leone",
                            DeptID = -3,
                            Email = "employee-24@example.com",
                            FirstName = "Merritt",
                            Gender = 0,
                            LastName = "Anabel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 20064.0,
                            Street = "Maci Greens"
                        },
                        new
                        {
                            Id = -25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Lurlineburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sri Lanka",
                            DeptID = -4,
                            Email = "employee-25@example.com",
                            FirstName = "Emerald",
                            Gender = 0,
                            LastName = "Lewis",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 59672.0,
                            Street = "Camila Fort"
                        },
                        new
                        {
                            Id = -26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Nyasiaborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Pierre and Miquelon",
                            DeptID = -4,
                            Email = "employee-26@example.com",
                            FirstName = "Casimer",
                            Gender = 0,
                            LastName = "Crystel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 305005.0,
                            Street = "Haleigh Station"
                        },
                        new
                        {
                            Id = -27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Hank",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Latvia",
                            DeptID = -2,
                            Email = "employee-27@example.com",
                            FirstName = "Gregory",
                            Gender = 0,
                            LastName = "Dock",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 305218.0,
                            Street = "Hudson Way"
                        },
                        new
                        {
                            Id = -28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Moriahmouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Antarctica (the territory South of 60 deg S)",
                            DeptID = -4,
                            Email = "employee-28@example.com",
                            FirstName = "Alexane",
                            Gender = 1,
                            LastName = "Arne",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 78706.0,
                            Street = "Brett Lock"
                        },
                        new
                        {
                            Id = -29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Clementinaland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Paraguay",
                            DeptID = -1,
                            Email = "employee-29@example.com",
                            FirstName = "Milan",
                            Gender = 0,
                            LastName = "Izabella",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 259779.0,
                            Street = "Brenda Flat"
                        },
                        new
                        {
                            Id = -30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Cummingsview",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Benin",
                            DeptID = -4,
                            Email = "employee-30@example.com",
                            FirstName = "Edwina",
                            Gender = 0,
                            LastName = "Kim",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 197018.0,
                            Street = "Toy Junction"
                        },
                        new
                        {
                            Id = -31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Tinaton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Botswana",
                            DeptID = -1,
                            Email = "employee-31@example.com",
                            FirstName = "Carmela",
                            Gender = 1,
                            LastName = "Carlotta",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 328701.0,
                            Street = "Jermey Common"
                        },
                        new
                        {
                            Id = -32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Michelleton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "French Polynesia",
                            DeptID = -1,
                            Email = "employee-32@example.com",
                            FirstName = "Kirk",
                            Gender = 1,
                            LastName = "Taya",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 247350.0,
                            Street = "Toy Via"
                        },
                        new
                        {
                            Id = -33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ernserhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Pitcairn Islands",
                            DeptID = -3,
                            Email = "employee-33@example.com",
                            FirstName = "Cyrus",
                            Gender = 0,
                            LastName = "Orpha",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 215528.0,
                            Street = "Zena Locks"
                        },
                        new
                        {
                            Id = -34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Alyssonland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "New Zealand",
                            DeptID = -4,
                            Email = "employee-34@example.com",
                            FirstName = "Emelia",
                            Gender = 0,
                            LastName = "Darien",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 470428.0,
                            Street = "Baumbach Fields"
                        },
                        new
                        {
                            Id = -35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "O'Konborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cambodia",
                            DeptID = -1,
                            Email = "employee-35@example.com",
                            FirstName = "Katelin",
                            Gender = 1,
                            LastName = "Taylor",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 253501.0,
                            Street = "Brandt Center"
                        },
                        new
                        {
                            Id = -36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Archhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Brazil",
                            DeptID = -3,
                            Email = "employee-36@example.com",
                            FirstName = "Diamond",
                            Gender = 1,
                            LastName = "Matteo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 284642.0,
                            Street = "Lexi Views"
                        },
                        new
                        {
                            Id = -37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Aureliehaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Congo",
                            DeptID = -3,
                            Email = "employee-37@example.com",
                            FirstName = "Jensen",
                            Gender = 0,
                            LastName = "Randal",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 314104.0,
                            Street = "Rempel Corner"
                        },
                        new
                        {
                            Id = -38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kubport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cuba",
                            DeptID = -2,
                            Email = "employee-38@example.com",
                            FirstName = "Barney",
                            Gender = 0,
                            LastName = "Miguel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 68895.0,
                            Street = "Lehner Burg"
                        },
                        new
                        {
                            Id = -39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Loganburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Jersey",
                            DeptID = -2,
                            Email = "employee-39@example.com",
                            FirstName = "Gerardo",
                            Gender = 1,
                            LastName = "Waldo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 130961.0,
                            Street = "Maria Plaza"
                        },
                        new
                        {
                            Id = -40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Narciso",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Albania",
                            DeptID = -3,
                            Email = "employee-40@example.com",
                            FirstName = "Telly",
                            Gender = 1,
                            LastName = "Mateo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 405486.0,
                            Street = "Darren Springs"
                        },
                        new
                        {
                            Id = -41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Osinskichester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Czech Republic",
                            DeptID = -4,
                            Email = "employee-41@example.com",
                            FirstName = "Lucie",
                            Gender = 1,
                            LastName = "Mervin",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 160059.0,
                            Street = "Addison Roads"
                        },
                        new
                        {
                            Id = -42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Bodemouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Isle of Man",
                            DeptID = -1,
                            Email = "employee-42@example.com",
                            FirstName = "Karelle",
                            Gender = 1,
                            LastName = "Fausto",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 456655.0,
                            Street = "Kunde Mall"
                        },
                        new
                        {
                            Id = -43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Bauchbury",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cook Islands",
                            DeptID = -1,
                            Email = "employee-43@example.com",
                            FirstName = "Felix",
                            Gender = 1,
                            LastName = "Trycia",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 331593.0,
                            Street = "Gleason Motorway"
                        },
                        new
                        {
                            Id = -44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Sethtown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Syrian Arab Republic",
                            DeptID = -1,
                            Email = "employee-44@example.com",
                            FirstName = "Demetrius",
                            Gender = 0,
                            LastName = "Dewitt",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 492321.0,
                            Street = "Dicki Gardens"
                        },
                        new
                        {
                            Id = -45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Retaborough",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Togo",
                            DeptID = -4,
                            Email = "employee-45@example.com",
                            FirstName = "Stone",
                            Gender = 1,
                            LastName = "Coby",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 234303.0,
                            Street = "Beahan Lakes"
                        },
                        new
                        {
                            Id = -46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Estellton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Marshall Islands",
                            DeptID = -4,
                            Email = "employee-46@example.com",
                            FirstName = "Hertha",
                            Gender = 0,
                            LastName = "Crystel",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 87837.0,
                            Street = "Andrew Isle"
                        },
                        new
                        {
                            Id = -47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Cummingschester",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Kuwait",
                            DeptID = -3,
                            Email = "employee-47@example.com",
                            FirstName = "Mikel",
                            Gender = 0,
                            LastName = "Afton",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 433480.0,
                            Street = "Sam Center"
                        },
                        new
                        {
                            Id = -48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Edwardoshire",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Malaysia",
                            DeptID = -2,
                            Email = "employee-48@example.com",
                            FirstName = "Bryce",
                            Gender = 1,
                            LastName = "Hildegard",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 267214.0,
                            Street = "Jakubowski Rue"
                        },
                        new
                        {
                            Id = -49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Frederic",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Martin",
                            DeptID = -2,
                            Email = "employee-49@example.com",
                            FirstName = "Elian",
                            Gender = 0,
                            LastName = "Susie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 79473.0,
                            Street = "Ike Row"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayOvernumberofvacationInyear")
                        .HasColumnType("int");

                    b.Property<int>("numberofvacationInyear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSetting", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountHourPrice = 150,
                            ExtraHourPrice = 75,
                            PriceForDayOvernumberofvacationInyear = 300,
                            numberofvacationInyear = 21
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = -3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = -4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = -5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = -6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = -7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = -8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = -9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = -10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = -11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = -12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = -13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = -14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = -15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = -16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = -17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = -18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = -19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = -20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = -21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = -22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = -23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = -24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = -25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -28,
                            Name = "OfficialVacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = -30,
                            Name = "GeneralSetting",
                            Operation = 1
                        },
                        new
                        {
                            Id = -31,
                            Name = "GeneralSetting",
                            Operation = 2
                        },
                        new
                        {
                            Id = -32,
                            Name = "Salary",
                            Operation = 1
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Extra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SettingViewModel", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}

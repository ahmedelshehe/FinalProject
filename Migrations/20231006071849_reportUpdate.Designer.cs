// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231006071849_reportUpdate")]
    partial class reportUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.Property<string>("AppRolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.HasKey("AppRolesId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("AppRolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -1
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -2
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -3
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -4
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -5
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -6
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -7
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -8
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -9
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -10
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -11
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -12
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -13
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -14
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -15
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -16
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -17
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -18
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -19
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -20
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -21
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -22
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -23
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -24
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -25
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -26
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -27
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -28
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -29
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -30
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -31
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -32
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -34
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -35
                        },
                        new
                        {
                            AppRolesId = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            PermissionsId = -36
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "af5e0bd5-5067-4925-8c72-1e4200c7fb11",
                            Name = "Adminstrator"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleAppId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) < 8 AND DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 3 THEN 8 - DATEDIFF(HOUR, ArrivalTime, DepartureTime) ELSE 0 END");

                    b.Property<int>("ExtraHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) > 8  THEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) - 8 ELSE 0 END");

                    b.Property<bool>("IsAbsent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CONVERT(bit, CASE WHEN DATEDIFF(HOUR, ArrivalTime, DepartureTime) <= 3 THEN 1 ELSE 0 END)");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = -2,
                            Name = "R & D"
                        },
                        new
                        {
                            Id = -3,
                            Name = "IT"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacations")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Williamsonport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sri Lanka",
                            DeptID = -1,
                            Email = "employee-1@example.com",
                            FirstName = "Tierra",
                            Gender = 1,
                            LastName = "Alvina",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 285607.0,
                            Street = "Roberta Crossroad"
                        },
                        new
                        {
                            Id = -2,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Arlo",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Somalia",
                            DeptID = -2,
                            Email = "employee-2@example.com",
                            FirstName = "Armando",
                            Gender = 0,
                            LastName = "Ramon",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 310171.0,
                            Street = "Cruickshank Ferry"
                        },
                        new
                        {
                            Id = -3,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Noemiton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Switzerland",
                            DeptID = -2,
                            Email = "employee-3@example.com",
                            FirstName = "Ocie",
                            Gender = 1,
                            LastName = "Edwin",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 7371.0,
                            Street = "O'Keefe Green"
                        },
                        new
                        {
                            Id = -4,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Irvingburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Wallis and Futuna",
                            DeptID = -4,
                            Email = "employee-4@example.com",
                            FirstName = "Jayson",
                            Gender = 1,
                            LastName = "Kaelyn",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 217411.0,
                            Street = "Becker Rapid"
                        },
                        new
                        {
                            Id = -5,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Claudieside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nicaragua",
                            DeptID = -2,
                            Email = "employee-5@example.com",
                            FirstName = "Rollin",
                            Gender = 0,
                            LastName = "Cornelius",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 109779.0,
                            Street = "Douglas Port"
                        },
                        new
                        {
                            Id = -6,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Lea",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Puerto Rico",
                            DeptID = -4,
                            Email = "employee-6@example.com",
                            FirstName = "Marina",
                            Gender = 0,
                            LastName = "Lauretta",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 135206.0,
                            Street = "Maggio Curve"
                        },
                        new
                        {
                            Id = -7,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Toyburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sri Lanka",
                            DeptID = -1,
                            Email = "employee-7@example.com",
                            FirstName = "Cecile",
                            Gender = 0,
                            LastName = "Annabelle",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 251795.0,
                            Street = "Dahlia Via"
                        },
                        new
                        {
                            Id = -8,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Samantamouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Costa Rica",
                            DeptID = -2,
                            Email = "employee-8@example.com",
                            FirstName = "Wilber",
                            Gender = 1,
                            LastName = "Queenie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 189644.0,
                            Street = "Schaefer Flats"
                        },
                        new
                        {
                            Id = -9,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Eveside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sao Tome and Principe",
                            DeptID = -4,
                            Email = "employee-9@example.com",
                            FirstName = "Isac",
                            Gender = 0,
                            LastName = "Aidan",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 296764.0,
                            Street = "Arturo Groves"
                        },
                        new
                        {
                            Id = -10,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Kariane",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Uzbekistan",
                            DeptID = -4,
                            Email = "employee-10@example.com",
                            FirstName = "Hubert",
                            Gender = 1,
                            LastName = "Shyanne",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 77682.0,
                            Street = "Gulgowski View"
                        },
                        new
                        {
                            Id = -11,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kuhicside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Denmark",
                            DeptID = -1,
                            Email = "employee-11@example.com",
                            FirstName = "Omer",
                            Gender = 0,
                            LastName = "Emmett",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 293576.0,
                            Street = "Bosco Corners"
                        },
                        new
                        {
                            Id = -12,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kulasville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Wallis and Futuna",
                            DeptID = -1,
                            Email = "employee-12@example.com",
                            FirstName = "Carli",
                            Gender = 0,
                            LastName = "Sabina",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 375104.0,
                            Street = "Dominique Road"
                        },
                        new
                        {
                            Id = -13,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Elmirafurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Denmark",
                            DeptID = -4,
                            Email = "employee-13@example.com",
                            FirstName = "Leila",
                            Gender = 1,
                            LastName = "Alfredo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 116578.0,
                            Street = "Collin Mountains"
                        },
                        new
                        {
                            Id = -14,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Mable",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Falkland Islands (Malvinas)",
                            DeptID = -1,
                            Email = "employee-14@example.com",
                            FirstName = "Presley",
                            Gender = 1,
                            LastName = "Rosa",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 92606.0,
                            Street = "Lowe Valley"
                        },
                        new
                        {
                            Id = -15,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dameonfort",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Belgium",
                            DeptID = -2,
                            Email = "employee-15@example.com",
                            FirstName = "Bridie",
                            Gender = 0,
                            LastName = "Sabryna",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 282381.0,
                            Street = "Sawayn Extension"
                        },
                        new
                        {
                            Id = -16,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Erin",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Netherlands Antilles",
                            DeptID = -2,
                            Email = "employee-16@example.com",
                            FirstName = "Oran",
                            Gender = 0,
                            LastName = "Kevin",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 250821.0,
                            Street = "Streich Inlet"
                        },
                        new
                        {
                            Id = -17,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Gisselleport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Macedonia",
                            DeptID = -1,
                            Email = "employee-17@example.com",
                            FirstName = "Yoshiko",
                            Gender = 1,
                            LastName = "Velda",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 225734.0,
                            Street = "Fahey Island"
                        },
                        new
                        {
                            Id = -18,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Lizzie",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mali",
                            DeptID = -3,
                            Email = "employee-18@example.com",
                            FirstName = "Lester",
                            Gender = 1,
                            LastName = "Bulah",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 240498.0,
                            Street = "Kessler Forge"
                        },
                        new
                        {
                            Id = -19,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Asaland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Marshall Islands",
                            DeptID = -2,
                            Email = "employee-19@example.com",
                            FirstName = "Jeanne",
                            Gender = 1,
                            LastName = "Alex",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 480965.0,
                            Street = "Sylvia Ridge"
                        },
                        new
                        {
                            Id = -20,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Loyalland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Cocos (Keeling) Islands",
                            DeptID = -1,
                            Email = "employee-20@example.com",
                            FirstName = "Misael",
                            Gender = 1,
                            LastName = "Antonette",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 473553.0,
                            Street = "Haley Heights"
                        },
                        new
                        {
                            Id = -21,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kubside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Trinidad and Tobago",
                            DeptID = -4,
                            Email = "employee-21@example.com",
                            FirstName = "Drake",
                            Gender = 0,
                            LastName = "Audie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 197810.0,
                            Street = "Hector Skyway"
                        },
                        new
                        {
                            Id = -22,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Blair",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Costa Rica",
                            DeptID = -2,
                            Email = "employee-22@example.com",
                            FirstName = "Hilton",
                            Gender = 0,
                            LastName = "Aaliyah",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 473591.0,
                            Street = "Ellie Way"
                        },
                        new
                        {
                            Id = -23,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Princessberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Sudan",
                            DeptID = -2,
                            Email = "employee-23@example.com",
                            FirstName = "Avery",
                            Gender = 1,
                            LastName = "Steve",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 421568.0,
                            Street = "Becker Mountains"
                        },
                        new
                        {
                            Id = -24,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Hamillhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Liechtenstein",
                            DeptID = -2,
                            Email = "employee-24@example.com",
                            FirstName = "Lesly",
                            Gender = 0,
                            LastName = "Tre",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 371068.0,
                            Street = "Romaguera Inlet"
                        },
                        new
                        {
                            Id = -25,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Quitzonport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Switzerland",
                            DeptID = -3,
                            Email = "employee-25@example.com",
                            FirstName = "Lynn",
                            Gender = 0,
                            LastName = "Hayley",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 184223.0,
                            Street = "Lockman Glens"
                        },
                        new
                        {
                            Id = -26,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Evalyntown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mauritania",
                            DeptID = -4,
                            Email = "employee-26@example.com",
                            FirstName = "Kian",
                            Gender = 0,
                            LastName = "Sabina",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 125813.0,
                            Street = "Heloise Parks"
                        },
                        new
                        {
                            Id = -27,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Patside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Portugal",
                            DeptID = -4,
                            Email = "employee-27@example.com",
                            FirstName = "Aditya",
                            Gender = 1,
                            LastName = "Eric",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 103420.0,
                            Street = "Flatley Valleys"
                        },
                        new
                        {
                            Id = -28,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Enos",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Yemen",
                            DeptID = -4,
                            Email = "employee-28@example.com",
                            FirstName = "Roel",
                            Gender = 1,
                            LastName = "Veronica",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 47359.0,
                            Street = "Prohaska Drives"
                        },
                        new
                        {
                            Id = -29,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ebertfurt",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Oman",
                            DeptID = -4,
                            Email = "employee-29@example.com",
                            FirstName = "Lucas",
                            Gender = 0,
                            LastName = "Ubaldo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 247731.0,
                            Street = "Lila River"
                        },
                        new
                        {
                            Id = -30,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Marshallside",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Norway",
                            DeptID = -1,
                            Email = "employee-30@example.com",
                            FirstName = "Emelia",
                            Gender = 0,
                            LastName = "Zoila",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 112745.0,
                            Street = "Alessandra Drive"
                        },
                        new
                        {
                            Id = -31,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Sofiastad",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Algeria",
                            DeptID = -4,
                            Email = "employee-31@example.com",
                            FirstName = "Jules",
                            Gender = 1,
                            LastName = "Destini",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 423702.0,
                            Street = "Della Island"
                        },
                        new
                        {
                            Id = -32,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Seamus",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Bahamas",
                            DeptID = -4,
                            Email = "employee-32@example.com",
                            FirstName = "Godfrey",
                            Gender = 0,
                            LastName = "Juston",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 372647.0,
                            Street = "Braun Path"
                        },
                        new
                        {
                            Id = -33,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ortizport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Dominican Republic",
                            DeptID = -4,
                            Email = "employee-33@example.com",
                            FirstName = "Bria",
                            Gender = 0,
                            LastName = "Lonzo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 465770.0,
                            Street = "Johnson Ville"
                        },
                        new
                        {
                            Id = -34,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Louie",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Kitts and Nevis",
                            DeptID = -3,
                            Email = "employee-34@example.com",
                            FirstName = "Cameron",
                            Gender = 0,
                            LastName = "Theodora",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 89993.0,
                            Street = "Ella Village"
                        },
                        new
                        {
                            Id = -35,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "North Aiden",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Arab Emirates",
                            DeptID = -4,
                            Email = "employee-35@example.com",
                            FirstName = "Alayna",
                            Gender = 1,
                            LastName = "Precious",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 303527.0,
                            Street = "Timothy Terrace"
                        },
                        new
                        {
                            Id = -36,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Krajcikport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Tokelau",
                            DeptID = -3,
                            Email = "employee-36@example.com",
                            FirstName = "Reynold",
                            Gender = 0,
                            LastName = "Laurie",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 10001.0,
                            Street = "Jenifer Well"
                        },
                        new
                        {
                            Id = -37,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Whitetown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Gambia",
                            DeptID = -1,
                            Email = "employee-37@example.com",
                            FirstName = "Cortez",
                            Gender = 1,
                            LastName = "Concepcion",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 393925.0,
                            Street = "Dorothy Trace"
                        },
                        new
                        {
                            Id = -38,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Melynaville",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Panama",
                            DeptID = -4,
                            Email = "employee-38@example.com",
                            FirstName = "Celine",
                            Gender = 1,
                            LastName = "Isaiah",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 426072.0,
                            Street = "Shawn Trail"
                        },
                        new
                        {
                            Id = -39,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Port Lori",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Mongolia",
                            DeptID = -4,
                            Email = "employee-39@example.com",
                            FirstName = "Brett",
                            Gender = 1,
                            LastName = "Pete",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 383961.0,
                            Street = "Shanel Oval"
                        },
                        new
                        {
                            Id = -40,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Schinnerberg",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Saint Barthelemy",
                            DeptID = -3,
                            Email = "employee-40@example.com",
                            FirstName = "Nathanial",
                            Gender = 0,
                            LastName = "Garett",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 106463.0,
                            Street = "Vandervort Court"
                        },
                        new
                        {
                            Id = -41,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "East Giuseppe",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Northern Mariana Islands",
                            DeptID = -2,
                            Email = "employee-41@example.com",
                            FirstName = "Tyra",
                            Gender = 1,
                            LastName = "Buford",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 33566.0,
                            Street = "Krystel Club"
                        },
                        new
                        {
                            Id = -42,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Candidamouth",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Belarus",
                            DeptID = -1,
                            Email = "employee-42@example.com",
                            FirstName = "Marcel",
                            Gender = 1,
                            LastName = "Broderick",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 43677.0,
                            Street = "Rempel Cape"
                        },
                        new
                        {
                            Id = -43,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Collierburgh",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Turks and Caicos Islands",
                            DeptID = -4,
                            Email = "employee-43@example.com",
                            FirstName = "Kendrick",
                            Gender = 0,
                            LastName = "Kelli",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 123037.0,
                            Street = "Nitzsche Path"
                        },
                        new
                        {
                            Id = -44,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "South Ona",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Chad",
                            DeptID = -2,
                            Email = "employee-44@example.com",
                            FirstName = "Quinn",
                            Gender = 1,
                            LastName = "Zora",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 53490.0,
                            Street = "Marie Ports"
                        },
                        new
                        {
                            Id = -45,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Hirtheport",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Venezuela",
                            DeptID = -3,
                            Email = "employee-45@example.com",
                            FirstName = "Libbie",
                            Gender = 1,
                            LastName = "Kaleb",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 253195.0,
                            Street = "Arden Mall"
                        },
                        new
                        {
                            Id = -46,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lake Allanton",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nauru",
                            DeptID = -4,
                            Email = "employee-46@example.com",
                            FirstName = "Israel",
                            Gender = 1,
                            LastName = "Domingo",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 145175.0,
                            Street = "Paul Falls"
                        },
                        new
                        {
                            Id = -47,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Goldnerland",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Liechtenstein",
                            DeptID = -2,
                            Email = "employee-47@example.com",
                            FirstName = "Jettie",
                            Gender = 0,
                            LastName = "Chloe",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 416180.0,
                            Street = "Mohr Meadow"
                        },
                        new
                        {
                            Id = -48,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "West Evalynhaven",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Barbados",
                            DeptID = -3,
                            Email = "employee-48@example.com",
                            FirstName = "Andre",
                            Gender = 1,
                            LastName = "Tyler",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 77567.0,
                            Street = "Padberg Corner"
                        },
                        new
                        {
                            Id = -49,
                            AvailableVacations = 21,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lillianatown",
                            ContractDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Slovenia",
                            DeptID = -2,
                            Email = "employee-49@example.com",
                            FirstName = "Gilberto",
                            Gender = 0,
                            LastName = "Matilda",
                            NationalId = "12345678901234",
                            Password = "12345678",
                            Salary = 480615.0,
                            Street = "Deshaun Hollow"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayOvernumberofvacationInyear")
                        .HasColumnType("int");

                    b.Property<int>("numberofvacationInyear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSetting", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountHourPrice = 150,
                            ExtraHourPrice = 75,
                            PriceForDayOvernumberofvacationInyear = 300,
                            numberofvacationInyear = 21
                        });
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OfficalVacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Employee",
                            Operation = 1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Employee",
                            Operation = 2
                        },
                        new
                        {
                            Id = -3,
                            Name = "Employee",
                            Operation = 3
                        },
                        new
                        {
                            Id = -4,
                            Name = "Employee",
                            Operation = 0
                        },
                        new
                        {
                            Id = -5,
                            Name = "Attendance",
                            Operation = 1
                        },
                        new
                        {
                            Id = -6,
                            Name = "Attendance",
                            Operation = 2
                        },
                        new
                        {
                            Id = -7,
                            Name = "Attendance",
                            Operation = 3
                        },
                        new
                        {
                            Id = -8,
                            Name = "Attendance",
                            Operation = 0
                        },
                        new
                        {
                            Id = -9,
                            Name = "AppRole",
                            Operation = 1
                        },
                        new
                        {
                            Id = -10,
                            Name = "AppRole",
                            Operation = 2
                        },
                        new
                        {
                            Id = -11,
                            Name = "AppRole",
                            Operation = 3
                        },
                        new
                        {
                            Id = -12,
                            Name = "AppRole",
                            Operation = 0
                        },
                        new
                        {
                            Id = -13,
                            Name = "AppUser",
                            Operation = 1
                        },
                        new
                        {
                            Id = -14,
                            Name = "AppUser",
                            Operation = 2
                        },
                        new
                        {
                            Id = -15,
                            Name = "AppUser",
                            Operation = 3
                        },
                        new
                        {
                            Id = -16,
                            Name = "AppUser",
                            Operation = 0
                        },
                        new
                        {
                            Id = -17,
                            Name = "Permission",
                            Operation = 1
                        },
                        new
                        {
                            Id = -18,
                            Name = "Permission",
                            Operation = 2
                        },
                        new
                        {
                            Id = -19,
                            Name = "Permission",
                            Operation = 3
                        },
                        new
                        {
                            Id = -20,
                            Name = "Permission",
                            Operation = 0
                        },
                        new
                        {
                            Id = -21,
                            Name = "Department",
                            Operation = 1
                        },
                        new
                        {
                            Id = -22,
                            Name = "Department",
                            Operation = 2
                        },
                        new
                        {
                            Id = -23,
                            Name = "Department",
                            Operation = 3
                        },
                        new
                        {
                            Id = -24,
                            Name = "Department",
                            Operation = 0
                        },
                        new
                        {
                            Id = -25,
                            Name = "OfficialVacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -26,
                            Name = "OfficialVacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -27,
                            Name = "OfficialVacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -28,
                            Name = "OfficialVacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = -29,
                            Name = "Vacation",
                            Operation = 1
                        },
                        new
                        {
                            Id = -30,
                            Name = "Vacation",
                            Operation = 2
                        },
                        new
                        {
                            Id = -31,
                            Name = "Vacation",
                            Operation = 3
                        },
                        new
                        {
                            Id = -32,
                            Name = "Vacation",
                            Operation = 0
                        },
                        new
                        {
                            Id = -34,
                            Name = "GeneralSetting",
                            Operation = 1
                        },
                        new
                        {
                            Id = -35,
                            Name = "GeneralSetting",
                            Operation = 2
                        },
                        new
                        {
                            Id = -36,
                            Name = "Salary",
                            Operation = 1
                        });
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Number", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("StartDate", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations", "dbo");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.Property<string>("Holiday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Genral_Id")
                        .HasColumnType("int");

                    b.HasKey("Holiday", "Genral_Id");

                    b.HasIndex("Genral_Id");

                    b.ToTable("WeeklyHolidays", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.EmployeeAttendanceVM", b =>
                {
                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("EmployeeAttendanceReport", "dbo");
                });

            modelBuilder.Entity("FinalProject.ViewModels.SettingViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Extra")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SettingViewModel", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "dbo");
                });

            modelBuilder.Entity("AppRolePermission", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleAppId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Attendance", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.OfficialVacation", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", "User")
                        .WithMany("OfficalVacations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.PhoneNumber", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.Vacation", b =>
                {
                    b.HasOne("FinalProject.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FinalProject.Models.WeeklyHoliday", b =>
                {
                    b.HasOne("FinalProject.Models.GeneralSetting", "GenrealSetting")
                        .WithMany("DayOffPerWeek")
                        .HasForeignKey("Genral_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenrealSetting");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FinalProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinalProject.Models.AppUser", b =>
                {
                    b.Navigation("OfficalVacations");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FinalProject.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("FinalProject.Models.GeneralSetting", b =>
                {
                    b.Navigation("DayOffPerWeek");
                });
#pragma warning restore 612, 618
        }
    }
}

@model IEnumerable<AppRole>
@using FinalProject.Utilities

@{
    ViewData["Title"] = "Index";
    var permissions = Context.Items["Permissions"] as List<Permission>;
    var canShowRole = permissions.HasPermission("AppRole", Operation.Show); 
    var canAddRole = permissions.HasPermission("AppRole", Operation.Add); ;
    var canUpdateRole = permissions.HasPermission("AppRole", Operation.Update); ;
    var canDeleteRole = permissions.HasPermission("AppRole", Operation.Delete); ;
    
}
<div class="d-flex justify-content-between">
    <h1>Roles</h1>
    <p @(canAddRole)>
        <a asp-action="Create" class="btn btn-outline-success">Create New</a>
    </p>
</div>


<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Edit</th>
            <th>View Permissions</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var role in Model)
        {
            <tr>
                <td>@role.Name</td>
                <td @(canUpdateRole)>
                    <a asp-action="Edit" asp-route-id="@role.Id" class="btn btn-outline-info">Edit</a>
                </td>
                <td @(canShowRole)>
                    <a asp-action="Details" asp-route-id="@role.Id" class="btn btn-outline-dark">View Permissions</a>
                </td>
                <td @(canDeleteRole)>
                    <a asp-action="Delete" asp-route-id="@role.Id" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>

        }
    </tbody>
</table>

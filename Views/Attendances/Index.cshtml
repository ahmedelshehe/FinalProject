@model X.PagedList.StaticPagedList<Attendance>
@using FinalProject.Utilities;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common;
﻿@{
    var pagedList = (IPagedList)Model;
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Attendance Dashboard";
    var permissions = Context.Items["Permissions"] as List<Permission>;


    var canShowAttendance = permissions.HasPermission("Attendance",Operation.Show);
    var canAddAttendance = permissions.HasPermission("Attendance", Operation.Show);
    var canUpdateAttendance = permissions.HasPermission("Attendance", Operation.Show);
    var canDeleteAttendance = permissions.HasPermission("Attendance", Operation.Show);
}
<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col">
        <p @(canAddAttendance)>
            <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
        </p>
        <p>
            <a asp-action="UploadFile">Create New From Excel</a>
        </p>

        <p>
            <a asp-action="SearchIndex">Search Attendance</a>
        </p>
    </div>
    <div class="col">
        <form asp-action="Search" class="form-inline">
            <div class="form-group">
                <input type="date" name="Date" class="form-control mr-2" />
                <button type="submit" class="btn btn-outline-info  mr-2">Search</button>
                <a asp-action="Index" class="btn btn-outline-warning">Clear</a>
            </div>
        </form>
    </div>
</div>



<table class="table">
    <thead>
        <tr>
            <th>
                Arrival Time
            </th>
            <th>
                Departure Time
            </th>
            <th>
                Date
            </th>
            <th>
                Employee
            </th>
            <th>
                Edit
            </th>
            <th>
                Details
            </th>
            <th>
                Delete
            </th>

        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ArrivalTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartureTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FirstName  )
            </td>
            <td @(canUpdateAttendance) >
                @Html.ActionLink("Edit", "Edit", new { id=item.EmployeeId , date=item.Date })
            </td>
            <td @(canShowAttendance)>
                @Html.ActionLink("Details", "Details", new { id=item.EmployeeId , date=item.Date })
            </td>
            <td @(canDeleteAttendance) >
                @Html.ActionLink("Delete", "Delete", new { id=item.EmployeeId , date=item.Date })
            </td>
            
        </tr>
}
    </tbody>
</table>
<div id="container" style="margin-left: 20px">
    <div class="pagination" style="margin-left: 400px">
        @Html.PagedListPager(pagedList, page => Url.Action("Index", new { page }), new PagedListRenderOptions
               {                       
                        DisplayLinkToIndividualPages = true,
                        DisplayPageCountAndCurrentLocation = false,
                        MaximumPageNumbersToDisplay = 10,
                        UlElementClasses =new string[] {"pagination justify-content-end"},
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" },
                   
                    })
    </div>
</div>
@model IEnumerable<FinalProject.Models.Department>
@using FinalProject.Utilities
@{
    ViewData["Title"] = "Index";
    var permissions = Context.Items["Permissions"] as List<Permission>;
    var canShowDepartments = permissions.HasPermission("Department", Operation.Show);
    var canAddDepartments = permissions.HasPermission("Department", Operation.Add);
    var canUpdateDepartments = permissions.HasPermission("Department", Operation.Update);
    var canDeleteDepartments = permissions.HasPermission("Department", Operation.Delete);
}

<h1>Index</h1>

<p @(canAddDepartments)>
    <a asp-action="Create" class="btn btn-outline-primary" >Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th @(canUpdateDepartments)>Edit</th>
            <th @(canShowDepartments)>Details</th>
            <th @(canDeleteDepartments)>Delete</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
                <td @(canUpdateDepartments)>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary">Edit</a> 

            </td>
                <td @(canShowDepartments)>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">View Employees</a> 
            </td>
                <td @(canDeleteDepartments)>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@model IEnumerable<Vacation>
@using FinalProject.RepoServices
@inject IVacationRepository VacationRepo
@using FinalProject.Utilities
@{
    ViewData["Title"] = "Vacations (Admin)";
}
@{
    var permissions = Context.Items["Permissions"] as List<Permission>;
    var canShowVacations = permissions.HasPermission("Vacation", Operation.Show);
    var canAddVacations = permissions.HasPermission("Vacation", Operation.Add);
    var canUpdateVacations = permissions.HasPermission("Vacation", Operation.Update);
    var canDeleteVacations = permissions.HasPermission("Vacation", Operation.Delete);
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css">

<div class="page-header">
    <div class="page-title">
        <h4>Vacation Requests</h4>
        <h6>Manage your Vacations</h6>
    </div>
</div>


<div class="card" id="vacations_print">
    <h1 class="print-on">Vacation Requests <br /> @DateTime.Today.Date.ToString("dd MMM yyyy")</h1>
    <div class="card-body">
        <div class="table-top print-off">
            <div class="search-set print-off">
                <div class="search-input">
                    <a class="btn btn-searchset"><img src="~/img/icons/search-white.svg" alt="img"></a>
                </div>
            </div>
            <div class="wordset print-off">
                <ul>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="pdf"><img src="~/img/icons/pdf.svg" alt="img"></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="excel"><img src="~/img/icons/excel.svg" alt="img"></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" onclick="printContent('vacations_print')" data-bs-placement="top" title="print"><img src="~/img/icons/printer.svg" alt="img"></a>
                    </li>
                </ul>
            </div>
        </div>


        <div class="table-responsive">
            <table class="table  datanew">
                <thead>
                    <tr>
                        <th>Employee</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Days</th>
                        <th>Description</th>
                        
                        <th class="print-off" @(canUpdateVacations)>Actions</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var vacation in Model)
                    {
                        <tr>
                            <td>@vacation.Employee.FirstName  @vacation.Employee.LastName</td>
                            <td>@vacation.StartDate.ToString("dd MMM yyyy")</td>
                            <td>@vacation.EndDate.ToString("dd MMM yyyy") </td>
                            @if (vacation.Status == VacationStatus.Approved)
                            {
                                <td><span class="badges bg-lightgreen">@vacation.Status</span></td>
                            }
                            else if (vacation.Status == VacationStatus.Rejected)
                            {
                                <td><span class="badges bg-lightred">@vacation.Status</span></td>
                            }
                            else
                            {
                                <td><span class="badges bg-lightyellow">@vacation.Status</span></td>
                            }
                            <td>@VacationRepo.GetVacationDays(vacation.EmployeeId,vacation.StartDate)</td>

                            <td>@vacation.Description</td>
                            <td class="print-off" @(canUpdateVacations)>
                                @if (vacation.Status == VacationStatus.Pending)
                                {
                                    <a href="@Url.Action("Approve", "Vacation", new { id = vacation.EmployeeId , date = vacation.StartDate })" class="m-1"><i class="fa-solid fa-check fa-2xl"></i></a>

                                    <a href="@Url.Action("Reject", "Vacation", new { id = vacation.EmployeeId , date = vacation.StartDate})"><i class="fa-solid fa-x fa-2xl"></i></a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<style>
    [type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
        background: #ff9f43; /* Change to the desired background color */
        color: #fff;
        border: 1px solid #ff9f43;
    }

    button.dt-button:hover:not(.disabled), div.dt-button:hover:not(.disabled), a.dt-button:hover:not(.disabled), input.dt-button:hover:not(.disabled) {
        background: #1B2850
    }

</style>
